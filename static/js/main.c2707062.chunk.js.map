{"version":3,"sources":["components/Address.jsx","components/Balance.jsx","constants.js","helpers/Transactor.js","components/Blockie.jsx","components/AddressInput.jsx","components/EtherInput.jsx","components/Wallet.jsx","components/Account.jsx","components/BytesStringInput.jsx","components/Contract/utils.js","components/Contract/DisplayVariable.jsx","components/Contract/FunctionForm.jsx","components/Contract/index.jsx","components/Faucet.jsx","components/Header.jsx","helpers/loadAppContracts.js","components/Swap.jsx","components/SwapInfo.jsx","components/Timeline.jsx","components/L2Bridge.jsx","components/BoredPunksPosition.jsx","components/BoredPunksApp.jsx","views/ExampleUI.jsx","views/Hints.jsx","views/Subgraph.jsx","views/BoredPunks.jsx","App.jsx","index.jsx","contracts/external_contracts.js"],"names":["Text","Typography","Address","props","address","value","ens","useLookupAddress","ensProvider","currentTheme","useThemeSwitcher","avatar","paragraph","rows","displayAddress","substr","ensSplit","split","length","size","text","etherscanLink","blockExplorer","blockExplorerLink","minimized","style","verticalAlign","color","target","href","rel","seed","toLowerCase","scale","onChange","editable","copyable","fontSize","paddingLeft","utils","require","Balance","useState","dollarMode","setDollarMode","balance","useBalance","provider","floatBalance","parseFloat","usingBalance","etherBalance","formatEther","toFixed","displayBalance","price","dollarMultiplier","padding","cursor","onClick","INFURA_ID","NETWORKS","localhost","name","chainId","rpcUrl","window","location","hostname","mainnet","kovan","faucet","rinkeby","ropsten","goerli","xdai","gasPrice","matic","mumbai","localArbitrum","localArbitrumL1","rinkebyArbitrum","arbitrum","localOptimismL1","localOptimism","kovanOptimism","optimism","localAvalanche","fujiAvalanche","mainnetAvalanche","testnetHarmony","mainnetHarmony","NETWORK","n","ethers","callbacks","Transactor","providerOrSigner","etherscan","tx","callback","a","Signer","isSigner","signer","getNetwork","network","_isProvider","getSigner","console","log","notify","options","dappId","system","networkId","transactionHandler","txInformation","possibleFunction","transaction","hash","Notify","etherscanNetwork","etherscanTxUrl","Promise","result","parseUnits","gasLimit","hexlify","sendTransaction","indexOf","emitter","on","onclick","open","notification","info","message","description","placement","txResult","listeningInterval","setInterval","getTransactionReceipt","currentTransactionReceipt","confirmations","clearInterval","wait","data","error","JSON","parse","stringify","body","obj","errorObj","e","Blockie","AddressInput","setValue","scan","setScan","currentValue","scannerButton","marginTop","count","CameraOutlined","QrcodeOutlined","updateAddress","useCallback","newValue","resolveName","possibleAddress","scanner","zIndex","position","left","top","width","delay","resolution","onError","onScan","possibleNewValue","lastIndexOf","id","autoComplete","autoFocus","placeholder","prefix","addonAfter","EtherInput","mode","setMode","display","setDisplay","option","title","usdValue","useEffect","ethValue","Paragraph","Wallet","signerAddress","setSignerAddress","getAddress","newAddress","receiveButton","privateKeyButton","selectedAddress","setOpen","qr","setQr","amount","setAmount","toAddress","setToAddress","pk","setPK","providerSend","WalletOutlined","rotate","level","includeMargin","renderAs","imageSettings","excavate","KeyOutlined","localStorage","getItem","wallet","extraPkDisplayAdded","extraPkDisplay","key","push","backgroundStyle","pastpk","pastwallet","currentPrivateKey","setItem","Date","now","privateKey","createRandom","_signingKey","reload","inputStyle","visible","float","paddingRight","onOk","onCancel","footer","type","disabled","loading","parseEther","to","SendOutlined","Account","userSigner","localProvider","mainnetProvider","web3Modal","loadWeb3Modal","logoutOfWeb3Modal","modalButtons","cachedProvider","marginLeft","shape","constants","tryToDisplay","thing","toNumber","formatUnits","DisplayVariable","contractFunction","functionInfo","refreshRequired","triggerRefresh","variable","setVariable","refresh","funcResponse","span","textAlign","opacity","BigNumber","getFunctionInputKey","input","inputIndex","FunctionForm","form","setForm","txValue","setTxValue","returnValue","setReturnValue","inputs","map","buttons","isHexString","formUpdate","parseBytes32String","formatBytes32String","toUtf8String","toUtf8Bytes","trim","margin","event","suffix","txValueInput","floatValue","from","toHexString","payable","buttonIcon","defaultValue","bordered","height","args","baseType","stateMutability","returned","overrides","noContractDisplay","className","borderRadius","fontWeight","marginRight","role","Contract","contract","customContract","account","show","contractConfig","contracts","useContractLoader","contractIsDeployed","useContractExistsAtAddress","displayedContractFunctions","useMemo","Object","entries","interface","functions","filter","fn","contractDisplay","contractFuncInfo","contractFunc","connect","injectedProvider","Header","src","subTitle","Select","Option","Swap","Layout","Content","Footer","Title","Link","SwapInfo","readContracts","writeContracts","spotLong","setSpotLong","spotShort","setSpotShort","fetch","json","justify","Item","label","block","BoredPunksPosition","createAmount","setCreateAmount","showSpan","setShowSpan","showSpin","setShowSpin","maxRedeem","setMaxRedeem","redeemVal","setRedeemVal","colBalance","usdcBalance","longBalance","shortBalance","colAllowance","pairsMinted","maxiMint","addonBefore","alert","LSP","create","then","approvalAmount","toString","lspAddress","USDC","approve","redeem","danger","BoredPunksApp","collateralCurr","strike","ethPrice","setPrice","longCollateralValue","newPrice","ETHfl10PUNK","itemLayout","dataSource","descr","content","renderItem","item","Meta","Math","round","ExampleUI","purpose","setPurposeEvents","yourLocalBalance","newPurpose","setNewPurpose","border","YourContract","setPurpose","update","status","gasUsed","gas","encodeFunctionData","paddingBottom","blockNumber","sender","SyncOutlined","spin","range","defaultChecked","percent","Hints","selectedToken","setSelectedToken","listOfTokens","useTokenList","showSearch","filterOption","children","optionFilterProp","token","symbol","Subgraph","Step","Steps","Panel","Collapse","BoredPunks","slideAmount","setSlideAmount","min","max","defaultActiveKey","header","direction","current","targetNetwork","DEBUG","mumbaiProvider","providers","StaticJsonRpcProvider","localProviderUrl","localProviderUrlFromEnv","process","REACT_APP_PROVIDER","walletLinkProvider","WalletLink","appName","makeWeb3Provider","Web3Modal","cacheProvider","theme","providerOptions","walletconnect","package","WalletConnectProvider","bridge","infuraId","rpc","portis","logo","Portis","fortmatic","Fortmatic","connector","_options","enable","authereum","Authereum","App","setInjectedProvider","setAddress","clearCachedProvider","disconnect","setTimeout","useExchangeEthPrice","useGasPrice","useUserProviderAndSigner","localChainId","_network","selectedChainId","faucetTx","yourMainnetBalance","deployedContracts","externalContracts","mainnetContracts","myMainnetUSDCBalance","useContractReader","lspTokenBalance","useEventListener","networkDisplay","networkSelected","networkLocal","right","closable","ethereum","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","request","method","params","switchTx","Web3Provider","code","reason","setRoute","pathname","faucetHint","connection","faucetClicked","setFaucetClicked","path","DAI","WMATIC","LONG","SHORT","themes","dark","light","prevTheme","subgraphUri","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","ApolloProvider","themeMap","defaultTheme","document","getElementById","SyntheticTokenABI","ERC20ABI","constant","outputs","anonymous","indexed","LSPABI","module","exports","abi"],"mappings":"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","file":"static/js/main.c2707062.chunk.js","sourcesContent":["import { Skeleton, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\n\n// changed value={address} to address={address}\n\n/*\n  ~ What it does? ~\n\n  Displays an address with a blockie image and option to copy address\n\n  ~ How can I use? ~\n\n  <Address\n    address={address}\n    ensProvider={mainnetProvider}\n    blockExplorer={blockExplorer}\n    fontSize={fontSize}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n  - Provide fontSize={fontSize} to change the size of address text\n*/\n\nconst { Text } = Typography;\n\nconst blockExplorerLink = (address, blockExplorer) =>\n  `${blockExplorer || \"https://etherscan.io/\"}${\"address/\"}${address}`;\n\nexport default function Address(props) {\n  const address = props.value || props.address;\n\n  const ens = useLookupAddress(props.ensProvider, address);\n\n  const { currentTheme } = useThemeSwitcher();\n\n  if (!address) {\n    return (\n      <span>\n        <Skeleton avatar paragraph={{ rows: 1 }} />\n      </span>\n    );\n  }\n\n  let displayAddress = address.substr(0, 6);\n\n  const ensSplit = ens && ens.split(\".\");\n  const validEnsCheck = ensSplit && ensSplit[ensSplit.length - 1] === \"eth\";\n\n  if (validEnsCheck) {\n    displayAddress = ens;\n  } else if (props.size === \"short\") {\n    displayAddress += \"...\" + address.substr(-4);\n  } else if (props.size === \"long\") {\n    displayAddress = address;\n  }\n\n  const etherscanLink = blockExplorerLink(address, props.blockExplorer);\n  if (props.minimized) {\n    return (\n      <span style={{ verticalAlign: \"middle\" }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          <Blockies seed={address.toLowerCase()} size={8} scale={2} />\n        </a>\n      </span>\n    );\n  }\n\n  let text;\n  if (props.onChange) {\n    text = (\n      <Text editable={{ onChange: props.onChange }} copyable={{ text: address }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  } else {\n    text = (\n      <Text copyable={{ text: address }}>\n        <a\n          style={{ color: currentTheme === \"light\" ? \"#222222\" : \"#ddd\" }}\n          target=\"_blank\"\n          href={etherscanLink}\n          rel=\"noopener noreferrer\"\n        >\n          {displayAddress}\n        </a>\n      </Text>\n    );\n  }\n\n  return (\n    <span>\n      <span style={{ verticalAlign: \"middle\" }}>\n        <Blockies seed={address.toLowerCase()} size={8} scale={props.fontSize ? props.fontSize / 7 : 4} />\n      </span>\n      <span style={{ verticalAlign: \"middle\", paddingLeft: 5, fontSize: props.fontSize ? props.fontSize : 28 }}>\n        {text}\n      </span>\n    </span>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useBalance } from \"eth-hooks\";\n\nconst { utils } = require(\"ethers\");\n\n/*\n  ~ What it does? ~\n\n  Displays a balance of given address in ether & dollar\n\n  ~ How can I use? ~\n\n  <Balance\n    address={address}\n    provider={mainnetProvider}\n    price={price}\n  />\n\n  ~ If you already have the balance as a bignumber ~\n  <Balance\n    balance={balance}\n    price={price}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to given address\n  - Provide provider={mainnetProvider} to access balance on mainnet or any other network (ex. localProvider)\n  - Provide price={price} of ether and get your balance converted to dollars\n*/\n\nexport default function Balance(props) {\n  const [dollarMode, setDollarMode] = useState(true);\n\n  // const [listening, setListening] = useState(false);\n\n  const balance = useBalance(props.provider, props.address);\n\n  let floatBalance = parseFloat(\"0.00\");\n\n  let usingBalance = balance;\n\n  if (typeof props.balance !== \"undefined\") {\n    usingBalance = props.balance;\n  }\n  if (typeof props.value !== \"undefined\") {\n    usingBalance = props.value;\n  }\n\n  if (usingBalance) {\n    const etherBalance = utils.formatEther(usingBalance);\n    parseFloat(etherBalance).toFixed(2);\n    floatBalance = parseFloat(etherBalance);\n  }\n\n  let displayBalance = floatBalance.toFixed(4);\n\n  const price = props.price || props.dollarMultiplier;\n\n  if (price && dollarMode) {\n    displayBalance = \"$\" + (floatBalance * price).toFixed(2);\n  }\n\n  return (\n    <span\n      style={{\n        verticalAlign: \"middle\",\n        fontSize: props.size ? props.size : 24,\n        padding: 8,\n        cursor: \"pointer\",\n      }}\n      onClick={() => {\n        setDollarMode(!dollarMode);\n      }}\n    >\n      {displayBalance}\n    </span>\n  );\n}\n","// MY INFURA_ID, SWAP IN YOURS FROM https://infura.io/dashboard/ethereum\nexport const INFURA_ID = \"460f40a260564ac4a4f4b3fffb032dad\";\n\n// MY ETHERSCAN_ID, SWAP IN YOURS FROM https://etherscan.io/myapikey\nexport const ETHERSCAN_KEY = \"PSW8C433Q667DVEX5BCRMGNAH9FSGFZ7Q8\";\n\n// BLOCKNATIVE ID FOR Notify.js:\nexport const BLOCKNATIVE_DAPPID = \"0b58206a-f3c0-4701-a62f-73c7243e8c77\";\n\nexport const NETWORKS = {\n  localhost: {\n    name: \"localhost\",\n    color: \"#666666\",\n    chainId: 31337,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\n  },\n  mainnet: {\n    name: \"mainnet\",\n    color: \"#ff8b9e\",\n    chainId: 1,\n    rpcUrl: `https://mainnet.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://etherscan.io/\",\n  },\n  kovan: {\n    name: \"kovan\",\n    color: \"#7003DD\",\n    chainId: 42,\n    rpcUrl: `https://kovan.infura.io/v3/${INFURA_ID}`,\n    blockExplorer: \"https://kovan.etherscan.io/\",\n    faucet: \"https://gitter.im/kovan-testnet/faucet\", // https://faucet.kovan.network/\n  },\n  rinkeby: {\n    name: \"rinkeby\",\n    color: \"#e0d068\",\n    chainId: 4,\n    rpcUrl: `https://rinkeby.infura.io/v3/${INFURA_ID}`,\n    faucet: \"https://faucet.rinkeby.io/\",\n    blockExplorer: \"https://rinkeby.etherscan.io/\",\n  },\n  ropsten: {\n    name: \"ropsten\",\n    color: \"#F60D09\",\n    chainId: 3,\n    faucet: \"https://faucet.ropsten.be/\",\n    blockExplorer: \"https://ropsten.etherscan.io/\",\n    rpcUrl: `https://ropsten.infura.io/v3/${INFURA_ID}`,\n  },\n  goerli: {\n    name: \"goerli\",\n    color: \"#0975F6\",\n    chainId: 5,\n    faucet: \"https://goerli-faucet.slock.it/\",\n    blockExplorer: \"https://goerli.etherscan.io/\",\n    rpcUrl: `https://goerli.infura.io/v3/${INFURA_ID}`,\n  },\n  xdai: {\n    name: \"xdai\",\n    color: \"#48a9a6\",\n    chainId: 100,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://dai.poa.network\",\n    faucet: \"https://xdai-faucet.top/\",\n    blockExplorer: \"https://blockscout.com/poa/xdai/\",\n  },\n  matic: {\n    name: \"matic\",\n    color: \"#2bbdf7\",\n    chainId: 137,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://speedy-nodes-nyc.moralis.io/d376b2384f04b47cf322a1c2/polygon/mainnet\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://polygonscan.com/\",\n  },\n  mumbai: {\n    name: \"mumbai\",\n    color: \"#92D9FA\",\n    chainId: 80001,\n    price: 1,\n    gasPrice: 1000000000,\n    rpcUrl: \"https://speedy-nodes-nyc.moralis.io/d376b2384f04b47cf322a1c2/polygon/mumbai\",\n    faucet: \"https://faucet.matic.network/\",\n    blockExplorer: \"https://mumbai.polygonscan.com\",\n  },\n  localArbitrum: {\n    name: \"localArbitrum\",\n    color: \"#50a0ea\",\n    chainId: 153869338190755,\n    blockExplorer: \"\",\n    rpcUrl: `http://localhost:8547`,\n  },\n  localArbitrumL1: {\n    name: \"localArbitrumL1\",\n    color: \"#50a0ea\",\n    chainId: 44010,\n    blockExplorer: \"\",\n    rpcUrl: `http://localhost:7545`,\n  },\n  rinkebyArbitrum: {\n    name: \"Arbitrum Testnet\",\n    color: \"#50a0ea\",\n    chainId: 421611,\n    blockExplorer: \"https://rinkeby-explorer.arbitrum.io/#/\",\n    rpcUrl: `https://rinkeby.arbitrum.io/rpc`,\n  },\n  arbitrum: {\n    name: \"Arbitrum\",\n    color: \"#50a0ea\",\n    chainId: 42161,\n    blockExplorer: \"https://explorer.arbitrum.io/#/\",\n    rpcUrl: `https://arb1.arbitrum.io/rpc`,\n    gasPrice: 0,\n  },\n  localOptimismL1: {\n    name: \"localOptimismL1\",\n    color: \"#f01a37\",\n    chainId: 31337,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":9545\",\n  },\n  localOptimism: {\n    name: \"localOptimism\",\n    color: \"#f01a37\",\n    chainId: 420,\n    blockExplorer: \"\",\n    rpcUrl: \"http://\" + window.location.hostname + \":8545\",\n    gasPrice: 0,\n  },\n  kovanOptimism: {\n    name: \"kovanOptimism\",\n    color: \"#f01a37\",\n    chainId: 69,\n    blockExplorer: \"https://kovan-optimistic.etherscan.io/\",\n    rpcUrl: `https://kovan.optimism.io`,\n    gasPrice: 0,\n  },\n  optimism: {\n    name: \"optimism\",\n    color: \"#f01a37\",\n    chainId: 10,\n    blockExplorer: \"https://optimistic.etherscan.io/\",\n    rpcUrl: `https://mainnet.optimism.io`,\n  },\n  localAvalanche: {\n    name: \"localAvalanche\",\n    color: \"#666666\",\n    chainId: 43112,\n    blockExplorer: \"\",\n    rpcUrl: `http://localhost:9650/ext/bc/C/rpc`,\n    gasPrice: 225000000000,\n  },\n  fujiAvalanche: {\n    name: \"fujiAvalanche\",\n    color: \"#666666\",\n    chainId: 43113,\n    blockExplorer: \"https://cchain.explorer.avax-test.network/\",\n    rpcUrl: `https://api.avax-test.network/ext/bc/C/rpc`,\n    gasPrice: 225000000000,\n  },\n  mainnetAvalanche: {\n    name: \"mainnetAvalanche\",\n    color: \"#666666\",\n    chainId: 43114,\n    blockExplorer: \"https://cchain.explorer.avax.network/\",\n    rpcUrl: `https://api.avax.network/ext/bc/C/rpc`,\n    gasPrice: 25000000000,\n  },\n  testnetHarmony: {\n    name: \"Harmony Testnet\",\n    color: \"#00b0ef\",\n    chainId: 1666700000,\n    blockExplorer: \"https://explorer.pops.one/\",\n    rpcUrl: `https://api.s0.b.hmny.io`,\n    gasPrice: 1000000000,\n  },\n  mainnetHarmony: {\n    name: \"Harmony Mainnet\",\n    color: \"#00b0ef\",\n    chainId: 1666600000,\n    blockExplorer: \"https://explorer.harmony.one/\",\n    rpcUrl: `https://api.harmony.one`,\n    gasPrice: 1000000000,\n  },\n};\n\nexport const NETWORK = chainId => {\n  for (const n in NETWORKS) {\n    if (NETWORKS[n].chainId === chainId) {\n      return NETWORKS[n];\n    }\n  }\n};\n","import { notification } from \"antd\";\nimport Notify from \"bnc-notify\";\nimport { BLOCKNATIVE_DAPPID } from \"../constants\";\n\nconst { ethers } = require(\"ethers\");\n\n// this should probably just be renamed to \"notifier\"\n// it is basically just a wrapper around BlockNative's wonderful Notify.js\n// https://docs.blocknative.com/notify\nconst callbacks = {};\n\nconst DEBUG = true;\n\nexport default function Transactor(providerOrSigner, gasPrice, etherscan) {\n  if (typeof providerOrSigner !== \"undefined\") {\n    // eslint-disable-next-line consistent-return\n    return async (tx, callback) => {\n      let signer;\n      let network;\n      let provider;\n      if (ethers.Signer.isSigner(providerOrSigner) === true) {\n        provider = providerOrSigner.provider;\n        signer = providerOrSigner;\n        network = providerOrSigner.provider && (await providerOrSigner.provider.getNetwork());\n      } else if (providerOrSigner._isProvider) {\n        provider = providerOrSigner;\n        signer = providerOrSigner.getSigner();\n        network = await providerOrSigner.getNetwork();\n      }\n\n      console.log(\"network\", network);\n      var options = null;\n      var notify = null;\n        options = {\n          dappId: BLOCKNATIVE_DAPPID, // GET YOUR OWN KEY AT https://account.blocknative.com\n          system: \"ethereum\",\n          networkId: network.chainId,\n          // darkMode: Boolean, // (default: false)\n          transactionHandler: txInformation => {\n            if (DEBUG) console.log(\"HANDLE TX\", txInformation);\n            const possibleFunction = callbacks[txInformation.transaction.hash];\n            if (typeof possibleFunction === \"function\") {\n              possibleFunction(txInformation.transaction);\n            }\n          },\n        };\n\n        notify = Notify(options);\n\n      let etherscanNetwork = \"\";\n      if (network.name && network.chainId > 1) {\n        etherscanNetwork = network.name + \".\";\n      }\n\n      let etherscanTxUrl = \"https://\" + etherscanNetwork + \"etherscan.io/tx/\";\n      if (network.chainId === 100) {\n        etherscanTxUrl = \"https://blockscout.com/poa/xdai/tx/\";\n      }\n\n      try {\n        let result;\n        if (tx instanceof Promise) {\n          if (DEBUG) console.log(\"AWAITING TX\", tx);\n          result = await tx;\n        } else {\n          if (!tx.gasPrice) {\n            tx.gasPrice = gasPrice || ethers.utils.parseUnits(\"4.1\", \"gwei\");\n          }\n          if (!tx.gasLimit) {\n            tx.gasLimit = ethers.utils.hexlify(120000);\n          }\n          if (DEBUG) console.log(\"RUNNING TX\", tx);\n          result = await signer.sendTransaction(tx);\n        }\n        if (DEBUG) console.log(\"RESULT:\", result);\n        // console.log(\"Notify\", notify);\n\n        if (callback) {\n          callbacks[result.hash] = callback;\n        }\n\n        // if it is a valid Notify.js network, use that, if not, just send a default notification\n        if (notify && [1, 3, 4, 5, 42, 100].indexOf(network.chainId) >= 0) {\n          const { emitter } = notify.hash(result.hash);\n          emitter.on(\"all\", transaction => {\n            return {\n              onclick: () => window.open((etherscan || etherscanTxUrl) + transaction.hash),\n            };\n          });\n        } else {\n          notification.info({\n            message: \"Local Transaction Sent\",\n            description: result.hash,\n            placement: \"bottomRight\",\n          });\n          // on most networks BlockNative will update a transaction handler,\n          // but locally we will set an interval to listen...\n          if (callback) {\n            const txResult = await tx;\n            const listeningInterval = setInterval(async () => {\n              console.log(\"CHECK IN ON THE TX\", txResult, provider);\n              const currentTransactionReceipt = await provider.getTransactionReceipt(txResult.hash);\n              if (currentTransactionReceipt && currentTransactionReceipt.confirmations) {\n                callback({ ...txResult, ...currentTransactionReceipt });\n                clearInterval(listeningInterval);\n              }\n            }, 500);\n          }\n        }\n\n        if (typeof result.wait === \"function\") {\n          await result.wait();\n        }\n\n        return result;\n      } catch (e) {\n        if (DEBUG) console.log(e);\n        // Accounts for Metamask and default signer on all networks\n        let message =\n          e.data && e.data.message\n            ? e.data.message\n            : e.error && JSON.parse(JSON.stringify(e.error)).body\n            ? JSON.parse(JSON.parse(JSON.stringify(e.error)).body).error.message\n            : e.data\n            ? e.data\n            : JSON.stringify(e);\n        if (!e.error && e.message) {\n          message = e.message;\n        }\n\n        console.log(\"Attempt to clean up:\", message);\n        try {\n          let obj = JSON.parse(message);\n          if (obj && obj.body) {\n            let errorObj = JSON.parse(obj.body);\n            if (errorObj && errorObj.error && errorObj.error.message) {\n              message = errorObj.error.message;\n            }\n          }\n        } catch (e) {\n          //ignore\n        }\n\n        notification.error({\n          message: \"Transaction Error\",\n          description: message,\n        });\n        if (callback && typeof callback === \"function\") {\n          callback(e);\n        }\n      }\n    };\n  }\n}\n","import React from \"react\";\nimport Blockies from \"react-blockies\";\n\n// provides a blockie image for the address using \"react-blockies\" library\n\nexport default function Blockie(props) {\n  if (!props.address || typeof props.address.toLowerCase !== \"function\") {\n    return <span />;\n  }\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return <Blockies seed={props.address.toLowerCase()} {...props} />;\n}\n","import { CameraOutlined, QrcodeOutlined } from \"@ant-design/icons\";\nimport { Badge, Input } from \"antd\";\nimport { useLookupAddress } from \"eth-hooks/dapps/ens\";\nimport React, { useCallback, useState } from \"react\";\nimport QrReader from \"react-qr-reader\";\nimport Blockie from \"./Blockie\";\n\n// probably we need to change value={toAddress} to address={toAddress}\n\n/*\n  ~ What it does? ~\n\n  Displays an address input with QR scan option\n\n  ~ How can I use? ~\n\n  <AddressInput\n    autoFocus\n    ensProvider={mainnetProvider}\n    placeholder=\"Enter address\"\n    value={toAddress}\n    onChange={setToAddress}\n  />\n\n  ~ Features ~\n\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide placeholder=\"Enter address\" value for the input\n  - Value of the address input is stored in value={toAddress}\n  - Control input change by onChange={setToAddress}\n                          or onChange={address => { setToAddress(address);}}\n*/\n\nexport default function AddressInput(props) {\n  const [value, setValue] = useState(props.value);\n  const [scan, setScan] = useState(false);\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n  const ens = useLookupAddress(props.ensProvider, currentValue);\n\n  const scannerButton = (\n    <div\n      style={{ marginTop: 4, cursor: \"pointer\" }}\n      onClick={() => {\n        setScan(!scan);\n      }}\n    >\n      <Badge count={<CameraOutlined style={{ fontSize: 9 }} />}>\n        <QrcodeOutlined style={{ fontSize: 18 }} />\n      </Badge>{\" \"}\n      Scan\n    </div>\n  );\n\n  const { ensProvider, onChange } = props;\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\") {\n        let address = newValue;\n        if (address.indexOf(\".eth\") > 0 || address.indexOf(\".xyz\") > 0) {\n          try {\n            const possibleAddress = await ensProvider.resolveName(address);\n            if (possibleAddress) {\n              address = possibleAddress;\n            }\n            // eslint-disable-next-line no-empty\n          } catch (e) {}\n        }\n        setValue(address);\n        if (typeof onChange === \"function\") {\n          onChange(address);\n        }\n      }\n    },\n    [ensProvider, onChange],\n  );\n\n  const scanner = scan ? (\n    <div\n      style={{\n        zIndex: 256,\n        position: \"absolute\",\n        left: 0,\n        top: 0,\n        width: \"100%\",\n      }}\n      onClick={() => {\n        setScan(false);\n      }}\n    >\n      <QrReader\n        delay={250}\n        resolution={1200}\n        onError={e => {\n          console.log(\"SCAN ERROR\", e);\n          setScan(false);\n        }}\n        onScan={newValue => {\n          if (newValue) {\n            console.log(\"SCAN VALUE\", newValue);\n            let possibleNewValue = newValue;\n            if (possibleNewValue.indexOf(\"/\") >= 0) {\n              possibleNewValue = possibleNewValue.substr(possibleNewValue.lastIndexOf(\"0x\"));\n              console.log(\"CLEANED VALUE\", possibleNewValue);\n            }\n            setScan(false);\n            updateAddress(possibleNewValue);\n          }\n        }}\n        style={{ width: \"100%\" }}\n      />\n    </div>\n  ) : (\n    \"\"\n  );\n\n  return (\n    <div>\n      {scanner}\n      <Input\n        id=\"0xAddress\" // name it something other than address for auto fill doxxing\n        name=\"0xAddress\" // name it something other than address for auto fill doxxing\n        autoComplete=\"off\"\n        autoFocus={props.autoFocus}\n        placeholder={props.placeholder ? props.placeholder : \"address\"}\n        prefix={<Blockie address={currentValue} size={8} scale={3} />}\n        value={ens || currentValue}\n        addonAfter={scannerButton}\n        onChange={e => {\n          updateAddress(e.target.value);\n        }}\n      />\n    </div>\n  );\n}\n","import { Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\n// small change in useEffect, display currentValue if it's provided by user\n\n/*\n  ~ What it does? ~\n\n  Displays input field for ETH/USD amount, with an option to convert between ETH and USD\n\n  ~ How can I use? ~\n\n  <EtherInput\n    autofocus\n    price={price}\n    value=100\n    placeholder=\"Enter amount\"\n    onChange={value => {\n      setAmount(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide value={value} to specify initial amount of ether\n  - Provide placeholder=\"Enter amount\" value for the input\n  - Control input change by onChange={value => { setAmount(value);}}\n*/\n\nexport default function EtherInput(props) {\n  const [mode, setMode] = useState(props.price ? \"USD\" : \"ETH\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState();\n\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    if (!props.price) return \"\";\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"USD\") {\n            setMode(\"ETH\");\n            setDisplay(currentValue);\n          } else {\n            setMode(\"USD\");\n            if (currentValue) {\n              const usdValue = \"\" + (parseFloat(currentValue) * props.price).toFixed(2);\n              setDisplay(usdValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let prefix;\n  let addonAfter;\n  if (mode === \"USD\") {\n    prefix = \"$\";\n    addonAfter = option(\"USD 🔀\");\n  } else {\n    prefix = \"Ξ\";\n    addonAfter = option(\"ETH 🔀\");\n  }\n\n  useEffect(() => {\n    if (!currentValue) {\n      setDisplay(\"\");\n    }\n  }, [currentValue]);\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"amount in \" + mode}\n      autoFocus={props.autoFocus}\n      prefix={prefix}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"USD\") {\n          const possibleNewValue = parseFloat(newValue);\n          if (possibleNewValue) {\n            const ethValue = possibleNewValue / props.price;\n            setValue(ethValue);\n            if (typeof props.onChange === \"function\") {\n              props.onChange(ethValue);\n            }\n            setDisplay(newValue);\n          } else {\n            setDisplay(newValue);\n          }\n        } else {\n          setValue(newValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import { KeyOutlined, QrcodeOutlined, SendOutlined, WalletOutlined } from \"@ant-design/icons\";\nimport { Button, Modal, Spin, Tooltip, Typography } from \"antd\";\nimport { ethers } from \"ethers\";\nimport QR from \"qrcode.react\";\nimport React, { useState, useEffect } from \"react\";\nimport { Transactor } from \"../helpers\";\nimport Address from \"./Address\";\nimport AddressInput from \"./AddressInput\";\nimport Balance from \"./Balance\";\nimport EtherInput from \"./EtherInput\";\n\nconst { Text, Paragraph } = Typography;\n\n/*\n  ~ What it does? ~\n\n  Displays a wallet where you can specify address and send USD/ETH, with options to\n  scan address, to convert between USD and ETH, to see and generate private keys,\n  to send, receive and extract the burner wallet\n\n  ~ How can I use? ~\n\n  <Wallet\n    provider={userProvider}\n    address={address}\n    ensProvider={mainnetProvider}\n    price={price}\n    color='red'\n  />\n\n  ~ Features ~\n\n  - Provide provider={userProvider} to display a wallet\n  - Provide address={address} if you want to specify address, otherwise\n                                                    your default address will be used\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n  - Provide price={price} of ether and easily convert between USD and ETH\n  - Provide color to specify the color of wallet icon\n*/\n\nexport default function Wallet(props) {\n  const [signerAddress, setSignerAddress] = useState();\n  useEffect(() => {\n    async function getAddress() {\n      if (props.signer) {\n        const newAddress = await props.signer.getAddress();\n        setSignerAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [props.signer]);\n\n  const selectedAddress = props.address || signerAddress;\n\n  const [open, setOpen] = useState();\n  const [qr, setQr] = useState();\n  const [amount, setAmount] = useState();\n  const [toAddress, setToAddress] = useState();\n  const [pk, setPK] = useState();\n\n  const providerSend = props.provider ? (\n    <Tooltip title=\"Wallet\">\n      <WalletOutlined\n        onClick={() => {\n          setOpen(!open);\n        }}\n        rotate={-90}\n        style={{\n          padding: 7,\n          color: props.color ? props.color : \"\",\n          cursor: \"pointer\",\n          fontSize: 28,\n          verticalAlign: \"middle\",\n        }}\n      />\n    </Tooltip>\n  ) : (\n    \"\"\n  );\n\n  let display;\n  let receiveButton;\n  let privateKeyButton;\n  if (qr) {\n    display = (\n      <div>\n        <div>\n          <Text copyable>{selectedAddress}</Text>\n        </div>\n        <QR\n          value={selectedAddress}\n          size=\"450\"\n          level=\"H\"\n          includeMargin\n          renderAs=\"svg\"\n          imageSettings={{ excavate: false }}\n        />\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setQr(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Hide\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  } else if (pk) {\n    const pk = localStorage.getItem(\"metaPrivateKey\");\n    const wallet = new ethers.Wallet(pk);\n\n    if (wallet.address !== selectedAddress) {\n      display = (\n        <div>\n          <b>*injected account*, private key unknown</b>\n        </div>\n      );\n    } else {\n      const extraPkDisplayAdded = {};\n      const extraPkDisplay = [];\n      extraPkDisplayAdded[wallet.address] = true;\n      extraPkDisplay.push(\n        <div style={{ fontSize: 16, padding: 2, backgroundStyle: \"#89e789\" }}>\n          <a href={\"/pk#\" + pk}>\n            <Address minimized address={wallet.address} ensProvider={props.ensProvider} /> {wallet.address.substr(0, 6)}\n          </a>\n        </div>,\n      );\n      for (const key in localStorage) {\n        if (key.indexOf(\"metaPrivateKey_backup\") >= 0) {\n          console.log(key);\n          const pastpk = localStorage.getItem(key);\n          const pastwallet = new ethers.Wallet(pastpk);\n          if (!extraPkDisplayAdded[pastwallet.address] /* && selectedAddress!=pastwallet.address */) {\n            extraPkDisplayAdded[pastwallet.address] = true;\n            extraPkDisplay.push(\n              <div style={{ fontSize: 16 }}>\n                <a href={\"/pk#\" + pastpk}>\n                  <Address minimized address={pastwallet.address} ensProvider={props.ensProvider} />{\" \"}\n                  {pastwallet.address.substr(0, 6)}\n                </a>\n              </div>,\n            );\n          }\n        }\n      }\n\n      display = (\n        <div>\n          <b>Private Key:</b>\n\n          <div>\n            <Text copyable>{pk}</Text>\n          </div>\n\n          <hr />\n\n          <i>\n            Point your camera phone at qr code to open in\n            <a target=\"_blank\" href={\"https://xdai.io/\" + pk} rel=\"noopener noreferrer\">\n              burner wallet\n            </a>\n            :\n          </i>\n          <QR\n            value={\"https://xdai.io/\" + pk}\n            size=\"450\"\n            level=\"H\"\n            includeMargin\n            renderAs=\"svg\"\n            imageSettings={{ excavate: false }}\n          />\n\n          <Paragraph style={{ fontSize: \"16\" }} copyable>\n            {\"https://xdai.io/\" + pk}\n          </Paragraph>\n\n          {extraPkDisplay ? (\n            <div>\n              <h3>Known Private Keys:</h3>\n              {extraPkDisplay}\n              <Button\n                onClick={() => {\n                  const currentPrivateKey = window.localStorage.getItem(\"metaPrivateKey\");\n                  if (currentPrivateKey) {\n                    window.localStorage.setItem(\"metaPrivateKey_backup\" + Date.now(), currentPrivateKey);\n                  }\n                  const randomWallet = ethers.Wallet.createRandom();\n                  const privateKey = randomWallet._signingKey().privateKey;\n                  window.localStorage.setItem(\"metaPrivateKey\", privateKey);\n                  window.location.reload();\n                }}\n              >\n                Generate\n              </Button>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </div>\n      );\n    }\n\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(\"\");\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Hide\n      </Button>\n    );\n  } else {\n    const inputStyle = {\n      padding: 10,\n    };\n\n    display = (\n      <div>\n        <div style={inputStyle}>\n          <AddressInput\n            autoFocus\n            ensProvider={props.ensProvider}\n            placeholder=\"to address\"\n            address={toAddress}\n            onChange={setToAddress}\n          />\n        </div>\n        <div style={inputStyle}>\n          <EtherInput\n            price={props.price}\n            value={amount}\n            onChange={value => {\n              setAmount(value);\n            }}\n          />\n        </div>\n      </div>\n    );\n    receiveButton = (\n      <Button\n        key=\"receive\"\n        onClick={() => {\n          setQr(selectedAddress);\n          setPK(\"\");\n        }}\n      >\n        <QrcodeOutlined /> Receive\n      </Button>\n    );\n    privateKeyButton = (\n      <Button\n        key=\"hide\"\n        onClick={() => {\n          setPK(selectedAddress);\n          setQr(\"\");\n        }}\n      >\n        <KeyOutlined /> Private Key\n      </Button>\n    );\n  }\n\n  return (\n    <span>\n      {providerSend}\n      <Modal\n        visible={open}\n        title={\n          <div>\n            {selectedAddress ? <Address address={selectedAddress} ensProvider={props.ensProvider} /> : <Spin />}\n            <div style={{ float: \"right\", paddingRight: 25 }}>\n              <Balance address={selectedAddress} provider={props.provider} dollarMultiplier={props.price} />\n            </div>\n          </div>\n        }\n        onOk={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        onCancel={() => {\n          setQr();\n          setPK();\n          setOpen(!open);\n        }}\n        footer={[\n          privateKeyButton,\n          receiveButton,\n          <Button\n            key=\"submit\"\n            type=\"primary\"\n            disabled={!amount || !toAddress || qr}\n            loading={false}\n            onClick={() => {\n              const tx = Transactor(props.signer || props.provider);\n\n              let value;\n              try {\n                value = ethers.utils.parseEther(\"\" + amount);\n              } catch (e) {\n                // failed to parseEther, try something else\n                value = ethers.utils.parseEther(\"\" + parseFloat(amount).toFixed(8));\n              }\n\n              tx({\n                to: toAddress,\n                value,\n              });\n              setOpen(!open);\n              setQr();\n            }}\n          >\n            <SendOutlined /> Send\n          </Button>,\n        ]}\n      >\n        {display}\n      </Modal>\n    </span>\n  );\n}\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport Address from \"./Address\";\nimport Balance from \"./Balance\";\nimport Wallet from \"./Wallet\";\n\n/*\n  ~ What it does? ~\n\n  Displays an Address, Balance, and Wallet as one Account component,\n  also allows users to log in to existing accounts and log out\n\n  ~ How can I use? ~\n\n  <Account\n    address={address}\n    localProvider={localProvider}\n    userProvider={userProvider}\n    mainnetProvider={mainnetProvider}\n    price={price}\n    web3Modal={web3Modal}\n    loadWeb3Modal={loadWeb3Modal}\n    logoutOfWeb3Modal={logoutOfWeb3Modal}\n    blockExplorer={blockExplorer}\n  />\n\n  ~ Features ~\n\n  - Provide address={address} and get balance corresponding to the given address\n  - Provide localProvider={localProvider} to access balance on local network\n  - Provide userProvider={userProvider} to display a wallet\n  - Provide mainnetProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\")\n  - Provide price={price} of ether and get your balance converted to dollars\n  - Provide web3Modal={web3Modal}, loadWeb3Modal={loadWeb3Modal}, logoutOfWeb3Modal={logoutOfWeb3Modal}\n              to be able to log in/log out to/from existing accounts\n  - Provide blockExplorer={blockExplorer}, click on address and get the link\n              (ex. by default \"https://etherscan.io/\" or for xdai \"https://blockscout.com/poa/xdai/\")\n*/\n\nexport default function Account({\n  address,\n  userSigner,\n  localProvider,\n  mainnetProvider,\n  price,\n  minimized,\n  web3Modal,\n  loadWeb3Modal,\n  logoutOfWeb3Modal,\n  blockExplorer,\n}) {\n  const modalButtons = [];\n  if (web3Modal) {\n    if (web3Modal.cachedProvider) {\n      modalButtons.push(\n        <Button\n          key=\"logoutbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          onClick={logoutOfWeb3Modal}\n        >\n          logout\n        </Button>,\n      );\n    } else {\n      modalButtons.push(\n        <Button\n          key=\"loginbutton\"\n          style={{ verticalAlign: \"top\", marginLeft: 8, marginTop: 4 }}\n          shape=\"round\"\n          size=\"large\"\n          /* type={minimized ? \"default\" : \"primary\"}     too many people just defaulting to MM and having a bad time */\n          onClick={loadWeb3Modal}\n        >\n          connect\n        </Button>,\n      );\n    }\n  }\n\n  const { currentTheme } = useThemeSwitcher();\n\n  const display = minimized ? (\n    \"\"\n  ) : (\n    <span>\n      {address ? (\n        <Address address={address} ensProvider={mainnetProvider} blockExplorer={blockExplorer} />\n      ) : (\n        \"Connecting...\"\n      )}\n      <Balance address={address} provider={localProvider} price={price} />\n      <Wallet\n        address={address}\n        provider={localProvider}\n        signer={userSigner}\n        ensProvider={mainnetProvider}\n        price={price}\n        color={currentTheme === \"light\" ? \"#1890ff\" : \"#2caad9\"}\n      />\n    </span>\n  );\n\n  return (\n    <div>\n      {display}\n      {modalButtons}\n    </div>\n  );\n}\n","import { Input } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\n\nconst { utils, constants } = require(\"ethers\");\n\n/*\n  ~ What it does? ~\n\n  Displays input field with options to convert between STRING and BYTES32\n\n  ~ How can I use? ~\n\n  <BytesStringInput\n    autofocus\n    value={\"scaffold-eth\"}\n    placeholder=\"Enter value...\"\n    onChange={value => {\n      setValue(value);\n    }}\n  />\n\n  ~ Features ~\n\n  - Provide value={value} to specify initial string\n  - Provide placeholder=\"Enter value...\" value for the input\n  - Control input change by onChange={value => { setValue(value);}}\n\n*/\n\nexport default function BytesStringInput(props) {\n  const [mode, setMode] = useState(\"STRING\");\n  const [display, setDisplay] = useState();\n  const [value, setValue] = useState(constants.HashZero);\n\n  // current value is the value in bytes32\n  const currentValue = typeof props.value !== \"undefined\" ? props.value : value;\n\n  const option = title => {\n    return (\n      <div\n        style={{ cursor: \"pointer\" }}\n        onClick={() => {\n          if (mode === \"STRING\") {\n            setMode(\"BYTES32\");\n            if (!utils.isHexString(currentValue)) {\n              /* in case user enters invalid bytes32 number,\n                   it considers it as string and converts to bytes32 */\n              const changedValue = utils.formatBytes32String(currentValue);\n              setDisplay(changedValue);\n            } else {\n              setDisplay(currentValue);\n            }\n          } else {\n            setMode(\"STRING\");\n            if (currentValue && utils.isHexString(currentValue)) {\n              setDisplay(utils.parseBytes32String(currentValue));\n            } else {\n              setDisplay(currentValue);\n            }\n          }\n        }}\n      >\n        {title}\n      </div>\n    );\n  };\n\n  let addonAfter;\n  if (mode === \"STRING\") {\n    addonAfter = option(\"STRING 🔀\");\n  } else {\n    addonAfter = option(\"BYTES32 🔀\");\n  }\n\n  useEffect(() => {\n    if (!currentValue) {\n      setDisplay(\"\");\n    }\n  }, [currentValue]);\n\n  return (\n    <Input\n      placeholder={props.placeholder ? props.placeholder : \"Enter value in \" + mode}\n      autoFocus={props.autoFocus}\n      value={display}\n      addonAfter={addonAfter}\n      onChange={async e => {\n        const newValue = e.target.value;\n        if (mode === \"STRING\") {\n          // const ethValue = parseFloat(newValue) / props.price;\n          // setValue(ethValue);\n          if (typeof props.onChange === \"function\") {\n            props.onChange(utils.formatBytes32String(newValue));\n          }\n          setValue(utils.formatBytes32String(newValue));\n          setDisplay(newValue);\n        } else {\n          if (typeof props.onChange === \"function\") {\n            props.onChange(newValue);\n          }\n          setValue(newValue);\n          setDisplay(newValue);\n        }\n      }}\n    />\n  );\n}\n","import React from \"react\";\nimport { Address } from \"..\";\n\nconst { utils } = require(\"ethers\");\n\nconst tryToDisplay = thing => {\n  if (thing && thing.toNumber) {\n    try {\n      return thing.toNumber();\n    } catch (e) {\n      return \"Ξ\" + utils.formatUnits(thing, \"ether\");\n    }\n  }\n  if (thing && thing.indexOf && thing.indexOf(\"0x\") === 0 && thing.length === 42) {\n    return <Address address={thing} fontSize={22} />;\n  }\n  return JSON.stringify(thing);\n};\n\nexport default tryToDisplay;\n","import { Col, Divider, Row } from \"antd\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport tryToDisplay from \"./utils\";\n\nconst DisplayVariable = ({ contractFunction, functionInfo, refreshRequired, triggerRefresh }) => {\n  const [variable, setVariable] = useState(\"\");\n\n  const refresh = useCallback(async () => {\n    try {\n      const funcResponse = await contractFunction();\n      setVariable(funcResponse);\n      triggerRefresh(false);\n    } catch (e) {\n      console.log(e);\n    }\n  }, [setVariable, contractFunction, triggerRefresh]);\n\n  useEffect(() => {\n    refresh();\n  }, [refresh, refreshRequired, contractFunction]);\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={14}>\n          <h2>{tryToDisplay(variable)}</h2>\n        </Col>\n        <Col span={2}>\n          <h2>\n            <a href=\"#\" onClick={refresh}>\n              🔄\n            </a>\n          </h2>\n        </Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n};\n\nexport default DisplayVariable;\n","import { Button, Col, Divider, Input, Row, Tooltip } from \"antd\";\nimport React, { useState } from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Transactor } from \"../../helpers\";\nimport tryToDisplay from \"./utils\";\n\nconst { utils, BigNumber } = require(\"ethers\");\n\nconst getFunctionInputKey = (functionInfo, input, inputIndex) => {\n  const name = input?.name ? input.name : \"input_\" + inputIndex + \"_\";\n  return functionInfo.name + \"_\" + name + \"_\" + input.type;\n};\n\nexport default function FunctionForm({ contractFunction, functionInfo, provider, gasPrice, triggerRefresh }) {\n  const [form, setForm] = useState({});\n  const [txValue, setTxValue] = useState();\n  const [returnValue, setReturnValue] = useState();\n\n  const tx = Transactor(provider, gasPrice);\n\n  const inputs = functionInfo.inputs.map((input, inputIndex) => {\n    const key = getFunctionInputKey(functionInfo, input, inputIndex);\n\n    let buttons = \"\";\n    if (input.type === \"bytes32\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to bytes32\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.parseBytes32String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.formatBytes32String(form[key]);\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"bytes\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"to hex\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              if (utils.isHexString(form[key])) {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.toUtf8String(form[key]);\n                setForm(formUpdate);\n              } else {\n                const formUpdate = { ...form };\n                formUpdate[key] = utils.hexlify(utils.toUtf8Bytes(form[key]));\n                setForm(formUpdate);\n              }\n            }}\n          >\n            #️⃣\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"uint256\") {\n      buttons = (\n        <Tooltip placement=\"right\" title=\"* 10 ** 18\">\n          <div\n            type=\"dashed\"\n            style={{ cursor: \"pointer\" }}\n            onClick={async () => {\n              const formUpdate = { ...form };\n              formUpdate[key] = utils.parseEther(form[key]);\n              setForm(formUpdate);\n            }}\n          >\n            ✴️\n          </div>\n        </Tooltip>\n      );\n    } else if (input.type === \"address\") {\n      const possibleAddress = form[key] && form[key].toLowerCase && form[key].toLowerCase().trim();\n      if (possibleAddress && possibleAddress.length === 42) {\n        buttons = (\n          <Tooltip placement=\"right\" title=\"blockie\">\n            <Blockies seed={possibleAddress} scale={3} />\n          </Tooltip>\n        );\n      }\n    }\n\n    return (\n      <div style={{ margin: 2 }} key={key}>\n        <Input\n          size=\"large\"\n          placeholder={input.name ? input.type + \" \" + input.name : input.type}\n          autoComplete=\"off\"\n          value={form[key]}\n          name={key}\n          onChange={event => {\n            const formUpdate = { ...form };\n            formUpdate[event.target.name] = event.target.value;\n            setForm(formUpdate);\n          }}\n          suffix={buttons}\n        />\n      </div>\n    );\n  });\n\n  const txValueInput = (\n    <div style={{ margin: 2 }} key=\"txValueInput\">\n      <Input\n        placeholder=\"transaction value\"\n        onChange={e => setTxValue(e.target.value)}\n        value={txValue}\n        addonAfter={\n          <div>\n            <Row>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\" * 10^18 \">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      const floatValue = parseFloat(txValue);\n                      if (floatValue) setTxValue(\"\" + floatValue * 10 ** 18);\n                    }}\n                  >\n                    ✳️\n                  </div>\n                </Tooltip>\n              </Col>\n              <Col span={16}>\n                <Tooltip placement=\"right\" title=\"number to hex\">\n                  <div\n                    type=\"dashed\"\n                    style={{ cursor: \"pointer\" }}\n                    onClick={async () => {\n                      setTxValue(BigNumber.from(txValue).toHexString());\n                    }}\n                  >\n                    #️⃣\n                  </div>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n      />\n    </div>\n  );\n\n  if (functionInfo.payable) {\n    inputs.push(txValueInput);\n  }\n\n  const buttonIcon =\n    functionInfo.type === \"call\" ? (\n      <Button style={{ marginLeft: -32 }}>Read📡</Button>\n    ) : (\n      <Button style={{ marginLeft: -32 }}>Send💸</Button>\n    );\n  inputs.push(\n    <div style={{ cursor: \"pointer\", margin: 2 }} key=\"goButton\">\n      <Input\n        onChange={e => setReturnValue(e.target.value)}\n        defaultValue=\"\"\n        bordered={false}\n        disabled\n        value={returnValue}\n        suffix={\n          <div\n            style={{ width: 50, height: 30, margin: 0 }}\n            type=\"default\"\n            onClick={async () => {\n              const args = functionInfo.inputs.map((input, inputIndex) => {\n                const key = getFunctionInputKey(functionInfo, input, inputIndex);\n                let value = form[key];\n                if (input.baseType === \"array\") {\n                  value = JSON.parse(value);\n                } else if (input.type === \"bool\") {\n                  if (value === \"true\" || value === \"1\" || value === \"0x1\" || value === \"0x01\" || value === \"0x0001\") {\n                    value = 1;\n                  } else {\n                    value = 0;\n                  }\n                }\n                return value;\n              });\n\n              let result;\n              if (functionInfo.stateMutability === \"view\" || functionInfo.stateMutability === \"pure\") {\n                try {\n                  const returned = await contractFunction(...args);\n                  result = tryToDisplay(returned);\n                } catch (err) {\n                  console.error(err);\n                }\n              } else {\n                const overrides = {};\n                if (txValue) {\n                  overrides.value = txValue; // ethers.utils.parseEther()\n                }\n                if (gasPrice) {\n                  overrides.gasPrice = gasPrice;\n                }\n                // Uncomment this if you want to skip the gas estimation for each transaction\n                // overrides.gasLimit = hexlify(1200000);\n\n                // console.log(\"Running with extras\",extras)\n                const returned = await tx(contractFunction(...args, overrides));\n                result = tryToDisplay(returned);\n              }\n\n              console.log(\"SETTING RESULT:\", result);\n              setReturnValue(result);\n              triggerRefresh(true);\n            }}\n          >\n            {buttonIcon}\n          </div>\n        }\n      />\n    </div>,\n  );\n\n  return (\n    <div>\n      <Row>\n        <Col\n          span={8}\n          style={{\n            textAlign: \"right\",\n            opacity: 0.333,\n            paddingRight: 6,\n            fontSize: 24,\n          }}\n        >\n          {functionInfo.name}\n        </Col>\n        <Col span={16}>{inputs}</Col>\n      </Row>\n      <Divider />\n    </div>\n  );\n}\n","import { Card } from \"antd\";\nimport React, { useMemo, useState } from \"react\";\nimport { useContractExistsAtAddress, useContractLoader } from \"eth-hooks\";\nimport Account from \"../Account\";\nimport DisplayVariable from \"./DisplayVariable\";\nimport FunctionForm from \"./FunctionForm\";\n\nconst noContractDisplay = (\n  <div>\n    Loading...{\" \"}\n    <div style={{ padding: 32 }}>\n      You need to run{\" \"}\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run chain\n      </span>{\" \"}\n      and{\" \"}\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run deploy\n      </span>{\" \"}\n      to see your contract here.\n    </div>\n    <div style={{ padding: 32 }}>\n      <span style={{ marginRight: 4 }} role=\"img\" aria-label=\"warning\">\n        ☢️\n      </span>\n      Warning: You might need to run\n      <span\n        className=\"highlight\"\n        style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n      >\n        yarn run deploy\n      </span>{\" \"}\n      <i>again</i> after the frontend comes up!\n    </div>\n  </div>\n);\n\nconst isQueryable = fn => (fn.stateMutability === \"view\" || fn.stateMutability === \"pure\") && fn.inputs.length === 0;\n\nexport default function Contract({\n  customContract,\n  account,\n  gasPrice,\n  signer,\n  provider,\n  name,\n  show,\n  price,\n  blockExplorer,\n  chainId,\n  contractConfig,\n}) {\n  const contracts = useContractLoader(provider, contractConfig, chainId);\n  let contract;\n  if (!customContract) {\n    contract = contracts ? contracts[name] : \"\";\n  } else {\n    contract = customContract;\n  }\n\n  const address = contract ? contract.address : \"\";\n  const contractIsDeployed = useContractExistsAtAddress(provider, address);\n\n  const displayedContractFunctions = useMemo(() => {\n    const results = contract\n      ? Object.entries(contract.interface.functions).filter(\n          fn => fn[1][\"type\"] === \"function\" && !(show && show.indexOf(fn[1][\"name\"]) < 0),\n        )\n      : [];\n    return results;\n  }, [contract, show]);\n\n  const [refreshRequired, triggerRefresh] = useState(false);\n  const contractDisplay = displayedContractFunctions.map(contractFuncInfo => {\n    const contractFunc =\n      contractFuncInfo[1].stateMutability === \"view\" || contractFuncInfo[1].stateMutability === \"pure\"\n        ? contract[contractFuncInfo[0]]\n        : contract.connect(signer)[contractFuncInfo[0]];\n\n    if (typeof contractFunc === \"function\") {\n      if (isQueryable(contractFuncInfo[1])) {\n        // If there are no inputs, just display return value\n        return (\n          <DisplayVariable\n            key={contractFuncInfo[1].name}\n            contractFunction={contractFunc}\n            functionInfo={contractFuncInfo[1]}\n            refreshRequired={refreshRequired}\n            triggerRefresh={triggerRefresh}\n          />\n        );\n      }\n\n      // If there are inputs, display a form to allow users to provide these\n      return (\n        <FunctionForm\n          key={\"FF\" + contractFuncInfo[0]}\n          contractFunction={contractFunc}\n          functionInfo={contractFuncInfo[1]}\n          provider={provider}\n          gasPrice={gasPrice}\n          triggerRefresh={triggerRefresh}\n        />\n      );\n    }\n    return null;\n  });\n\n  return (\n    <div style={{ margin: \"auto\", width: \"70vw\" }}>\n      <Card\n        title={\n          <div>\n            {name}\n            <div style={{ float: \"right\" }}>\n              <Account\n                address={address}\n                localProvider={provider}\n                injectedProvider={provider}\n                mainnetProvider={provider}\n                price={price}\n                blockExplorer={blockExplorer}\n              />\n              {account}\n            </div>\n          </div>\n        }\n        size=\"large\"\n        style={{ marginTop: 25, width: \"100%\" }}\n        loading={contractDisplay && contractDisplay.length <= 0}\n      >\n        {contractIsDeployed ? contractDisplay : noContractDisplay}\n      </Card>\n    </div>\n  );\n}\n","import { SendOutlined } from \"@ant-design/icons\";\nimport { Button, Input, Tooltip } from \"antd\";\n// import { useLookupAddress } from \"eth-hooks/dapps/ens\";\nimport React, { useCallback, useState, useEffect } from \"react\";\nimport Blockies from \"react-blockies\";\nimport { Transactor } from \"../helpers\";\nimport Wallet from \"./Wallet\";\n\nconst { utils } = require(\"ethers\");\n\n// improved a bit by converting address to ens if it exists\n// added option to directly input ens name\n// added placeholder option\n\n/*\n  ~ What it does? ~\n\n  Displays a local faucet to send ETH to given address, also wallet is provided\n\n  ~ How can I use? ~\n\n  <Faucet\n    price={price}\n    localProvider={localProvider}\n    ensProvider={mainnetProvider}\n    placeholder={\"Send local faucet\"}\n  />\n\n  ~ Features ~\n\n  - Provide price={price} of ether and convert between USD and ETH in a wallet\n  - Provide localProvider={localProvider} to be able to send ETH to given address\n  - Provide ensProvider={mainnetProvider} and your address will be replaced by ENS name\n              (ex. \"0xa870\" => \"user.eth\") or you can enter directly ENS name instead of address\n              works both in input field & wallet\n  - Provide placeholder=\"Send local faucet\" value for the input\n*/\n\nexport default function Faucet(props) {\n  const [address, setAddress] = useState();\n  const [faucetAddress, setFaucetAddress] = useState();\n\n  const { price, placeholder, localProvider, ensProvider, onChange } = props;\n\n  useEffect(() => {\n    const getFaucetAddress = async () => {\n      if (localProvider) {\n        const _faucetAddress = await localProvider.listAccounts();\n        setFaucetAddress(_faucetAddress[0]);\n        //console.log(_faucetAddress);\n      }\n    };\n    getFaucetAddress();\n  }, [localProvider]);\n\n  let blockie;\n  if (address && typeof address.toLowerCase === \"function\") {\n    blockie = <Blockies seed={address.toLowerCase()} size={8} scale={4} />;\n  } else {\n    blockie = <div />;\n  }\n\n  // const ens = useLookupAddress(ensProvider, address);\n\n  const updateAddress = useCallback(\n    async newValue => {\n      if (typeof newValue !== \"undefined\" && utils.isAddress(newValue)) {\n        let newAddress = newValue;\n        // if (newAddress.indexOf(\".eth\") > 0 || newAddress.indexOf(\".xyz\") > 0) {\n        //   try {\n        //     const possibleAddress = await ensProvider.resolveName(newAddress);\n        //     if (possibleAddress) {\n        //       newAddress = possibleAddress;\n        //     }\n        //     // eslint-disable-next-line no-empty\n        //   } catch (e) { }\n        // }\n        setAddress(newAddress);\n      }\n    },\n    [ensProvider, onChange],\n  );\n\n  const tx = Transactor(localProvider);\n\n  return (\n    <span>\n      <Input\n        size=\"large\"\n        placeholder={placeholder ? placeholder : \"local faucet\"}\n        prefix={blockie}\n        value={address}\n        // value={ens || address}\n        onChange={e => {\n          // setAddress(e.target.value);\n          updateAddress(e.target.value);\n        }}\n        suffix={\n          <Tooltip title=\"Faucet: Send local ether to an address.\">\n            <Button\n              onClick={() => {\n                tx({\n                  to: address,\n                  value: utils.parseEther(\"0.01\"),\n                });\n                setAddress(\"\");\n              }}\n              shape=\"circle\"\n              icon={<SendOutlined />}\n            />\n            <Wallet\n              color=\"#888888\"\n              provider={localProvider}\n              ensProvider={ensProvider}\n              price={price}\n              address={faucetAddress}\n            />\n          </Tooltip>\n        }\n      />\n    </span>\n  );\n}\n","import { PageHeader } from \"antd\";\nimport React from \"react\";\n\n\n// displays a page header\n\nexport default function Header() {\n  return (\n    <a href=\"https://floorwars.github.io\" target=\"_blank\" rel=\"noopener noreferrer\">\n      <PageHeader\n        title={(<img src='/logo.png' width='200' />)} \n        subTitle=\"Synthetic NFT Floor Derivatives\"\n        style={{ cursor: \"pointer\" }}\n      />\n    </a>\n  );\n}\n","const contractListPromise = import(\"../contracts/hardhat_contracts.json\");\r\n// @ts-ignore\r\nconst externalContractsPromise = import(\"../contracts/external_contracts\");\r\n\r\nexport const loadAppContracts = async () => {\r\n  const config = {};\r\n  config.deployedContracts = (await contractListPromise).default ?? {};\r\n  config.externalContracts = (await externalContractsPromise).default ?? {};\r\n  return config;\r\n};\r\n","import { RetweetOutlined, SettingOutlined } from \"@ant-design/icons\";\nimport { ChainId, Fetcher, Percent, Token, TokenAmount, Trade, WETH } from \"@uniswap/sdk\";\nimport { abi as IUniswapV2Router02ABI } from \"@uniswap/v2-periphery/build/IUniswapV2Router02.json\";\nimport {\n  Button,\n  Card,\n  Descriptions,\n  Divider,\n  Drawer,\n  InputNumber,\n  Modal,\n  notification,\n  Row,\n  Select,\n  Space,\n  Tooltip,\n  Typography,\n} from \"antd\";\nimport { useBlockNumber, usePoller } from \"eth-hooks\";\nimport { ethers } from \"ethers\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDebounce } from \"../hooks\";\n\nconst { Option } = Select;\nconst { Text } = Typography;\n\nexport const ROUTER_ADDRESS = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\n\nexport const ZERO_ADDRESS = \"0x0000000000000000000000000000000000000000\";\n\nconst erc20Abi = [\n  \"function balanceOf(address owner) view returns (uint256)\",\n  \"function approve(address _spender, uint256 _value) public returns (bool success)\",\n  \"function allowance(address _owner, address _spender) public view returns (uint256 remaining)\",\n];\n\nconst makeCall = async (callName, contract, args, metadata = {}) => {\n  if (contract[callName]) {\n    let result;\n    if (args) {\n      result = await contract[callName](...args, metadata);\n    } else {\n      result = await contract[callName]();\n    }\n    return result;\n  }\n  return undefined;\n  console.log(\"no call of that name!\");\n};\n\nconst defaultToken = \"ETH\";\nconst defaultTokenOut = \"DAI\";\nconst defaultSlippage = \"0.5\";\nconst defaultTimeLimit = 60 * 10;\n\nconst tokenListToObject = array =>\n  array.reduce((obj, item) => {\n    obj[item.symbol] = new Token(item.chainId, item.address, item.decimals, item.symbol, item.name);\n    return obj;\n  }, {});\n\nfunction Swap({ selectedProvider, tokenListURI }) {\n  const [tokenIn, setTokenIn] = useState(defaultToken);\n  const [tokenOut, setTokenOut] = useState(defaultTokenOut);\n  const [exact, setExact] = useState();\n  const [amountIn, setAmountIn] = useState();\n  const [amountInMax, setAmountInMax] = useState();\n  const [amountOut, setAmountOut] = useState();\n  const [amountOutMin, setAmountOutMin] = useState();\n  const [trades, setTrades] = useState();\n  const [routerAllowance, setRouterAllowance] = useState();\n  const [balanceIn, setBalanceIn] = useState();\n  const [balanceOut, setBalanceOut] = useState();\n  const [slippageTolerance, setSlippageTolerance] = useState(\n    new Percent(Math.round(defaultSlippage * 100).toString(), \"10000\"),\n  );\n  const [timeLimit, setTimeLimit] = useState(defaultTimeLimit);\n  const [swapping, setSwapping] = useState(false);\n  const [approving, setApproving] = useState(false);\n  const [settingsVisible, setSettingsVisible] = useState(false);\n  const [swapModalVisible, setSwapModalVisible] = useState(false);\n\n  const [tokenList, setTokenList] = useState([]);\n\n  const [tokens, setTokens] = useState();\n\n  const [invertPrice, setInvertPrice] = useState(false);\n\n  const blockNumber = useBlockNumber(selectedProvider, 3000);\n\n  const signer = selectedProvider.getSigner();\n  const routerContract = new ethers.Contract(ROUTER_ADDRESS, IUniswapV2Router02ABI, signer);\n\n  const _tokenListUri = tokenListURI || \"https://gateway.ipfs.io/ipns/tokens.uniswap.org\";\n\n  const debouncedAmountIn = useDebounce(amountIn, 500);\n  const debouncedAmountOut = useDebounce(amountOut, 500);\n\n  const activeChainId = process.env.REACT_APP_NETWORK === \"kovan\" ? ChainId.KOVAN : ChainId.MAINNET;\n\n  useEffect(() => {\n    const getTokenList = async () => {\n      console.log(_tokenListUri);\n      try {\n        const tokenListResponse = await fetch(_tokenListUri);\n        const tokenListJson = await tokenListResponse.json();\n        const filteredTokens = tokenListJson.tokens.filter(function (t) {\n          return t.chainId === activeChainId;\n        });\n        const ethToken = WETH[activeChainId];\n        ethToken.name = \"Ethereum\";\n        ethToken.symbol = \"ETH\";\n        ethToken.logoURI =\n          \"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2/logo.png\";\n        const _tokenList = [ethToken, ...filteredTokens];\n        setTokenList(_tokenList);\n        const _tokens = tokenListToObject(_tokenList);\n        setTokens(_tokens);\n      } catch (e) {\n        console.log(e);\n      }\n    };\n    getTokenList();\n  }, [tokenListURI]);\n\n  const getTrades = async () => {\n    if (tokenIn && tokenOut && (amountIn || amountOut)) {\n      const pairs = arr => arr.map((v, i) => arr.slice(i + 1).map(w => [v, w])).flat();\n\n      const baseTokens = tokenList\n        .filter(function (t) {\n          return [\"DAI\", \"USDC\", \"USDT\", \"COMP\", \"ETH\", \"MKR\", \"LINK\", tokenIn, tokenOut].includes(t.symbol);\n        })\n        .map(el => {\n          return new Token(el.chainId, el.address, el.decimals, el.symbol, el.name);\n        });\n\n      const listOfPairwiseTokens = pairs(baseTokens);\n\n      const getPairs = async list => {\n        const listOfPromises = list.map(item => Fetcher.fetchPairData(item[0], item[1], selectedProvider));\n        return Promise.all(listOfPromises.map(p => p.catch(() => undefined)));\n      };\n\n      const listOfPairs = await getPairs(listOfPairwiseTokens);\n\n      let bestTrade;\n\n      if (exact === \"in\") {\n        setAmountInMax();\n        bestTrade = Trade.bestTradeExactIn(\n          listOfPairs.filter(item => item),\n          new TokenAmount(tokens[tokenIn], ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals)),\n          tokens[tokenOut],\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountOut(bestTrade[0].outputAmount.toSignificant(6));\n        } else {\n          setAmountOut();\n        }\n      } else if (exact === \"out\") {\n        setAmountOutMin();\n        bestTrade = Trade.bestTradeExactOut(\n          listOfPairs.filter(item => item),\n          tokens[tokenIn],\n          new TokenAmount(tokens[tokenOut], ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals)),\n          { maxNumResults: 3, maxHops: 1 },\n        );\n        if (bestTrade[0]) {\n          setAmountIn(bestTrade[0].inputAmount.toSignificant(6));\n        } else {\n          setAmountIn();\n        }\n      }\n\n      setTrades(bestTrade);\n\n      console.log(bestTrade);\n    }\n  };\n\n  useEffect(() => {\n    getTrades();\n  }, [tokenIn, tokenOut, debouncedAmountIn, debouncedAmountOut, slippageTolerance, selectedProvider]);\n\n  useEffect(() => {\n    if (trades && trades[0]) {\n      if (exact === \"in\") {\n        setAmountOutMin(trades[0].minimumAmountOut(slippageTolerance));\n      } else if (exact === \"out\") {\n        setAmountInMax(trades[0].maximumAmountIn(slippageTolerance));\n      }\n    }\n  }, [slippageTolerance, amountIn, amountOut, trades]);\n\n  const getBalance = async (_token, _account, _contract) => {\n    let newBalance;\n    if (_token === \"ETH\") {\n      newBalance = await selectedProvider.getBalance(_account);\n    } else {\n      newBalance = await makeCall(\"balanceOf\", _contract, [_account]);\n    }\n    return newBalance;\n  };\n\n  const getAccountInfo = async () => {\n    if (tokens) {\n      const accountList = await selectedProvider.listAccounts();\n\n      if (tokenIn) {\n        const tempContractIn = new ethers.Contract(tokens[tokenIn].address, erc20Abi, selectedProvider);\n        const newBalanceIn = await getBalance(tokenIn, accountList[0], tempContractIn);\n        setBalanceIn(newBalanceIn);\n\n        let allowance;\n\n        if (tokenIn === \"ETH\") {\n          setRouterAllowance();\n        } else {\n          allowance = await makeCall(\"allowance\", tempContractIn, [accountList[0], ROUTER_ADDRESS]);\n          setRouterAllowance(allowance);\n        }\n      }\n\n      if (tokenOut) {\n        const tempContractOut = new ethers.Contract(tokens[tokenOut].address, erc20Abi, selectedProvider);\n        const newBalanceOut = await getBalance(tokenOut, accountList[0], tempContractOut);\n        setBalanceOut(newBalanceOut);\n      }\n    }\n  };\n\n  usePoller(getAccountInfo, 6000);\n\n  const route = trades\n    ? trades.length > 0\n      ? trades[0].route.path.map(function (item) {\n          return item.symbol;\n        })\n      : []\n    : [];\n\n  const updateRouterAllowance = async newAllowance => {\n    setApproving(true);\n    try {\n      const tempContract = new ethers.Contract(tokens[tokenIn].address, erc20Abi, signer);\n      const result = await makeCall(\"approve\", tempContract, [ROUTER_ADDRESS, newAllowance]);\n      console.log(result);\n      setApproving(false);\n      return true;\n    } catch (e) {\n      notification.open({\n        message: \"Approval unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const approveRouter = async () => {\n    const approvalAmount =\n      exact === \"in\"\n        ? ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals))\n        : amountInMax.raw.toString();\n    console.log(approvalAmount);\n    const approval = updateRouterAllowance(approvalAmount);\n    if (approval) {\n      notification.open({\n        message: \"Token transfer approved\",\n        description: `You can now swap up to ${amountIn} ${tokenIn}`,\n      });\n    }\n  };\n\n  const removeRouterAllowance = async () => {\n    const approvalAmount = ethers.utils.hexlify(0);\n    console.log(approvalAmount);\n    const removal = updateRouterAllowance(approvalAmount);\n    if (removal) {\n      notification.open({\n        message: \"Token approval removed\",\n        description: `The router is no longer approved for ${tokenIn}`,\n      });\n    }\n  };\n\n  const executeSwap = async () => {\n    setSwapping(true);\n    try {\n      let args;\n      const metadata = {};\n\n      let call;\n      const deadline = Math.floor(Date.now() / 1000) + timeLimit;\n      const path = trades[0].route.path.map(function (item) {\n        return item.address;\n      });\n      console.log(path);\n      const accountList = await selectedProvider.listAccounts();\n      const address = accountList[0];\n\n      if (exact === \"in\") {\n        const _amountIn = ethers.utils.hexlify(ethers.utils.parseUnits(amountIn.toString(), tokens[tokenIn].decimals));\n        const _amountOutMin = ethers.utils.hexlify(ethers.BigNumber.from(amountOutMin.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapExactETHForTokens\";\n          args = [_amountOutMin, path, address, deadline];\n          metadata.value = _amountIn;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapExactTokensForETH\" : \"swapExactTokensForTokens\";\n          args = [_amountIn, _amountOutMin, path, address, deadline];\n        }\n      } else if (exact === \"out\") {\n        const _amountOut = ethers.utils.hexlify(\n          ethers.utils.parseUnits(amountOut.toString(), tokens[tokenOut].decimals),\n        );\n        const _amountInMax = ethers.utils.hexlify(ethers.BigNumber.from(amountInMax.raw.toString()));\n        if (tokenIn === \"ETH\") {\n          call = \"swapETHForExactTokens\";\n          args = [_amountOut, path, address, deadline];\n          metadata.value = _amountInMax;\n        } else {\n          call = tokenOut === \"ETH\" ? \"swapTokensForExactETH\" : \"swapTokensForExactTokens\";\n          args = [_amountOut, _amountInMax, path, address, deadline];\n        }\n      }\n      console.log(call, args, metadata);\n      const result = await makeCall(call, routerContract, args, metadata);\n      console.log(result);\n      notification.open({\n        message: \"Swap complete 🦄\",\n        description: (\n          <>\n            <Text>{`Swapped ${tokenIn} for ${tokenOut}, transaction: `}</Text>\n            <Text copyable>{result.hash}</Text>\n          </>\n        ),\n      });\n      setSwapping(false);\n    } catch (e) {\n      console.log(e);\n      setSwapping(false);\n      notification.open({\n        message: \"Swap unsuccessful\",\n        description: `Error: ${e.message}`,\n      });\n    }\n  };\n\n  const showSwapModal = () => {\n    setSwapModalVisible(true);\n  };\n\n  const handleSwapModalOk = () => {\n    setSwapModalVisible(false);\n    executeSwap();\n  };\n\n  const handleSwapModalCancel = () => {\n    setSwapModalVisible(false);\n  };\n\n  const insufficientBalance = balanceIn\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const inputIsToken = tokenIn !== \"ETH\";\n  const insufficientAllowance = !inputIsToken\n    ? false\n    : routerAllowance\n    ? parseFloat(ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals)) < amountIn\n    : null;\n  const formattedBalanceIn = balanceIn\n    ? parseFloat(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals)).toPrecision(6)\n    : null;\n  const formattedBalanceOut = balanceOut\n    ? parseFloat(ethers.utils.formatUnits(balanceOut, tokens[tokenOut].decimals)).toPrecision(6)\n    : null;\n\n  const metaIn =\n    tokens && tokenList && tokenIn\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenIn].address;\n        })[0]\n      : null;\n  const metaOut =\n    tokens && tokenList && tokenOut\n      ? tokenList.filter(function (t) {\n          return t.address === tokens[tokenOut].address;\n        })[0]\n      : null;\n\n  const cleanIpfsURI = uri => {\n    try {\n      return uri.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\");\n    } catch (e) {\n      console.log(e, uri);\n      return uri;\n    }\n  };\n\n  const logoIn = metaIn ? cleanIpfsURI(metaIn.logoURI) : null;\n  const logoOut = metaOut ? cleanIpfsURI(metaOut.logoURI) : null;\n\n  const rawPrice = trades && trades[0] ? trades[0].executionPrice : null;\n  const price = rawPrice ? rawPrice.toSignificant(7) : null;\n  const priceDescription = rawPrice\n    ? invertPrice\n      ? `${rawPrice.invert().toSignificant(7)} ${tokenIn} per ${tokenOut}`\n      : `${price} ${tokenOut} per ${tokenIn}`\n    : null;\n\n  const priceWidget = (\n    <Space>\n      <Text type=\"secondary\">{priceDescription}</Text>\n      <Button\n        type=\"text\"\n        onClick={() => {\n          setInvertPrice(!invertPrice);\n        }}\n      >\n        <RetweetOutlined />\n      </Button>\n    </Space>\n  );\n\n  const swapModal = (\n    <Modal title=\"Confirm swap\" visible={swapModalVisible} onOk={handleSwapModalOk} onCancel={handleSwapModalCancel}>\n      <Row>\n        <Space>\n          <img src={logoIn} alt={tokenIn} width=\"30\" />\n          {amountIn}\n          {tokenIn}\n        </Space>\n      </Row>\n      <Row justify=\"center\" align=\"middle\" style={{ width: 30 }}>\n        <span>↓</span>\n      </Row>\n      <Row>\n        <Space>\n          <img src={logoOut} alt={tokenOut} width=\"30\" />\n          {amountOut}\n          {tokenOut}\n        </Space>\n      </Row>\n      <Divider />\n      <Row>{priceWidget}</Row>\n      <Row>\n        {trades && ((amountOutMin && exact === \"in\") || (amountInMax && exact === \"out\"))\n          ? exact === \"in\"\n            ? `Output is estimated. You will receive at least ${amountOutMin.toSignificant(\n                6,\n              )} ${tokenOut} or the transaction will revert.`\n            : `Input is estimated. You will sell at most ${amountInMax.toSignificant(\n                6,\n              )} ${tokenIn} or the transaction will revert.`\n          : null}\n      </Row>\n    </Modal>\n  );\n\n  return (\n    <Card\n      title={\n        <Space>\n          <img src=\"https://ipfs.io/ipfs/QmXttGpZrECX5qCyXbBQiqgQNytVGeZW5Anewvh2jc4psg\" width=\"40\" alt=\"uniswapLogo\" />\n          <Typography>Uniswapper</Typography>\n        </Space>\n      }\n      extra={\n        <Button\n          type=\"text\"\n          onClick={() => {\n            setSettingsVisible(true);\n          }}\n        >\n          <SettingOutlined />\n        </Button>\n      }\n    >\n      <Space direction=\"vertical\">\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`From${exact === \"out\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoIn} alt={tokenIn} width=\"30\" />\n                <Button\n                  type=\"link\"\n                  onClick={() => {\n                    setAmountOut();\n                    setAmountIn(ethers.utils.formatUnits(balanceIn, tokens[tokenIn].decimals));\n                    setAmountOutMin();\n                    setAmountInMax();\n                    setExact(\"in\");\n                  }}\n                >\n                  {formattedBalanceIn}\n                </Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              min={0}\n              size=\"large\"\n              value={amountIn}\n              onChange={e => {\n                setAmountOut();\n                setTrades();\n                setAmountIn(e);\n                setExact(\"in\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenIn}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              defaultValue={defaultToken}\n              onChange={value => {\n                console.log(value);\n                if (value === tokenOut) {\n                  console.log(\"switch!\", tokenIn);\n                  setTokenOut(tokenIn);\n                  setAmountOut(amountIn);\n                  setBalanceOut(balanceIn);\n                }\n                setTokenIn(value);\n                setTrades();\n                setAmountIn();\n                setExact(\"out\");\n                setBalanceIn();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Tooltip title={route.join(\"->\")}>\n            <span>↓</span>\n          </Tooltip>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Card\n            size=\"small\"\n            type=\"inner\"\n            title={`To${exact === \"in\" && tokenIn && tokenOut ? \" (estimate)\" : \"\"}`}\n            extra={\n              <>\n                <img src={logoOut} width=\"30\" alt={tokenOut} />\n                <Button type=\"text\">{formattedBalanceOut}</Button>\n              </>\n            }\n            style={{ width: 400, textAlign: \"left\" }}\n          >\n            <InputNumber\n              style={{ width: \"160px\" }}\n              size=\"large\"\n              min={0}\n              value={amountOut}\n              onChange={e => {\n                setAmountOut(e);\n                setAmountIn();\n                setTrades();\n                setExact(\"out\");\n              }}\n            />\n            <Select\n              showSearch\n              value={tokenOut}\n              style={{ width: \"120px\" }}\n              size=\"large\"\n              bordered={false}\n              onChange={value => {\n                console.log(value, tokenIn, tokenOut);\n                if (value === tokenIn) {\n                  console.log(\"switch!\", tokenOut);\n                  setTokenIn(tokenOut);\n                  setAmountIn(amountOut);\n                  setBalanceIn(balanceOut);\n                }\n                setTokenOut(value);\n                setExact(\"in\");\n                setAmountOut();\n                setTrades();\n                setBalanceOut();\n              }}\n              filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n              optionFilterProp=\"children\"\n            >\n              {tokenList.map(token => (\n                <Option key={token.symbol} value={token.symbol}>\n                  {token.symbol}\n                </Option>\n              ))}\n            </Select>\n          </Card>\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          {priceDescription ? priceWidget : null}\n        </Row>\n        <Row justify=\"center\" align=\"middle\">\n          <Space>\n            {inputIsToken ? (\n              <Button size=\"large\" loading={approving} disabled={!insufficientAllowance} onClick={approveRouter}>\n                {!insufficientAllowance && amountIn && amountOut ? \"Approved\" : \"Approve\"}\n              </Button>\n            ) : null}\n            <Button\n              size=\"large\"\n              loading={swapping}\n              disabled={insufficientAllowance || insufficientBalance || !amountIn || !amountOut}\n              onClick={showSwapModal}\n            >\n              {insufficientBalance ? \"Insufficient balance\" : \"Swap!\"}\n            </Button>\n            {swapModal}\n          </Space>\n        </Row>\n      </Space>\n      <Drawer\n        visible={settingsVisible}\n        onClose={() => {\n          setSettingsVisible(false);\n        }}\n        width={500}\n      >\n        <Descriptions title=\"Details\" column={1} style={{ textAlign: \"left\" }}>\n          <Descriptions.Item label=\"blockNumber\">{blockNumber}</Descriptions.Item>\n          <Descriptions.Item label=\"routerAllowance\">\n            <Space>\n              {routerAllowance ? ethers.utils.formatUnits(routerAllowance, tokens[tokenIn].decimals) : null}\n              {routerAllowance > 0 ? <Button onClick={removeRouterAllowance}>Remove Allowance</Button> : null}\n            </Space>\n          </Descriptions.Item>\n          <Descriptions.Item label=\"route\">{route.join(\"->\")}</Descriptions.Item>\n          <Descriptions.Item label=\"exact\">{exact}</Descriptions.Item>\n          <Descriptions.Item label=\"bestPrice\">\n            {trades ? (trades.length > 0 ? trades[0].executionPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"nextMidPrice\">\n            {trades ? (trades.length > 0 ? trades[0].nextMidPrice.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"priceImpact\">\n            {trades ? (trades.length > 0 ? trades[0].priceImpact.toSignificant(6) : null) : null}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"slippageTolerance\">\n            <InputNumber\n              defaultValue={defaultSlippage}\n              min={0}\n              max={100}\n              precision={2}\n              formatter={value => `${value}%`}\n              parser={value => value.replace(\"%\", \"\")}\n              onChange={value => {\n                console.log(value);\n\n                const slippagePercent = new Percent(Math.round(value * 100).toString(), \"10000\");\n                setSlippageTolerance(slippagePercent);\n              }}\n            />\n          </Descriptions.Item>\n          <Descriptions.Item label=\"amountInMax\">{amountInMax ? amountInMax.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"amountOutMin\">{amountOutMin ? amountOutMin.toExact() : null}</Descriptions.Item>\n          <Descriptions.Item label=\"timeLimitInSeconds\">\n            <InputNumber\n              min={0}\n              max={3600}\n              defaultValue={defaultTimeLimit}\n              onChange={value => {\n                console.log(value);\n                setTimeLimit(value);\n              }}\n            />\n          </Descriptions.Item>\n        </Descriptions>\n      </Drawer>\n    </Card>\n  );\n}\n\nexport default Swap;\n","import React, { useState, useEffect } from \"react\";\r\nconst { utils } = require(\"ethers\");\r\nimport { Button, Card, Descriptions, Divider, Row, Col, Layout, Menu, Breadcrumb, Typography, Space } from \"antd\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\nconst { Title, Paragraph, Text, Link } = Typography;\r\n\r\nexport default function SwapInfo({\r\n  tx,\r\n  mainnetProvider,\r\n  readContracts,\r\n  writeContracts,\r\n}) {\r\n\r\n  const [spotLong, setSpotLong] = useState(0);\r\n  const [spotShort, setSpotShort] = useState(0);\r\n \r\n  useEffect(async () => {\r\n    const result = await fetch( '/demoprice.json');\r\n    const json = await result.json();\r\n    setSpotLong(parseFloat(json.spotLong));\r\n    setSpotShort(parseFloat(json.spotShort));\r\n\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <Row justify=\"center\">\r\n      <Divider>Swap Long/Short Tokens</Divider>\r\n      <Space>\r\n         <Card >\r\n           <Descriptions title=\"Long (token) / USDC\" bordered>\r\n             <Descriptions.Item label=\"Spot Rate\">{spotLong}</Descriptions.Item>\r\n           </Descriptions>\r\n           <Button type=\"primary\" block>Swap</Button>\r\n           <Button type=\"secondary\" block>Add long-USDC Liquidity</Button>\r\n         </Card>\r\n         <Card >\r\n           <Descriptions title=\"Short (token) / USDC\" bordered>\r\n             <Descriptions.Item label=\"Spot Rate\">{spotShort}</Descriptions.Item>\r\n           </Descriptions>\r\n           <Button type=\"primary\" block>Swap</Button>\r\n           <Button type=\"secondary\" block>Add short-USDC Liquidity</Button>\r\n         </Card>\r\n      </Space>\r\n    </Row>\r\n\r\n\r\n\r\n\r\n  );\r\n\r\n}\r\n","import { DownloadOutlined, EditOutlined, SendOutlined } from \"@ant-design/icons\";\nimport { Timeline, Typography } from \"antd\";\nimport React from \"react\";\nimport Blockies from \"react-blockies\";\n\nconst { Text } = Typography;\n\n// displays a timeline for scaffold-eth usage\n\nexport default function TimelineDisplay(props) {\n  return (\n    <Timeline mode=\"right\">\n      <Timeline.Item dot=\"💾\">\n        <Text delete>\n          Clone and Install from the{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://github.com/austintgriffith/scaffold-eth\">\n            github repo\n          </a>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⚛️\">\n        <Text delete>\n          Start your frontend app with: <Text strong>yarn start</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"⛓\">\n        <Text delete={props.chainIsUp}>\n          Start your local blockchain with: <Text strong>yarn run chain</Text> (and refresh)\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📝\">\n        <Text delete={props.hasOwner}>\n          Compile and deploy your smart contract: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🤡\">\n        <Text delete={props.isNotSmoort}>\n          Fix error in <Text code>SmartContractWallet.sol</Text> then: <Text strong>yarn run deploy</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot={<SendOutlined style={{ fontSize: \"16px\" }} />} color={props.hasEther ? \"green\" : \"blue\"}>\n        <Text delete={props.hasEther}>\n          Send test ether to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address using\n          (bottom left) faucet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<DownloadOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.contractHasEther ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.contractHasEther}>\n          Deposit some funds into your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item\n        dot={<EditOutlined style={{ fontSize: \"16px\" }} />}\n        color={props.amOwnerOfContract ? \"green\" : \"blue\"}\n      >\n        <Text delete={props.amOwnerOfContract}>\n          Set <b>owner</b> of your{\" \"}\n          <Blockies seed={(props.contractAddress ? props.contractAddress : \"\").toLowerCase()} size={8} scale={2} />{\" \"}\n          smart contract wallet to your{\" \"}\n          <Blockies seed={(props.address ? props.address : \"\").toLowerCase()} size={8} scale={2} /> address\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"☢️\">\n        <Text>\n          Yikes, anyone can take ownership of <Text code>SmartContractWallet.sol</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🔬\">\n        <Text>\n          Test your contract with <Text code>buidler/test/myTest.js</Text> then:\n          <Text strong>yarn run test</Text>\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"🚀\">\n        <Text>\n          Build something awesome with 🏗 <a href=\"https://github.com/austintgriffith/scaffold-eth\">scaffold-eth</a> and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://twitter.com/austingriffith\">\n            @ me\n          </a>\n          !\n        </Text>\n      </Timeline.Item>\n\n      <Timeline.Item dot=\"📖\">\n        <Text>\n          Read more about{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://ethereum.org/developers\">\n            Ethereum\n          </a>\n          ,{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://solidity.readthedocs.io/en/develop/contracts.html\">\n            Solidity\n          </a>\n          , and{\" \"}\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://buidler.dev/tutorial\">\n            Buidler\n          </a>\n        </Text>\n      </Timeline.Item>\n    </Timeline>\n  );\n}\n","import { utils, ethers } from \"ethers\";\nimport { Button, Input, Form, Select, InputNumber, Table, Radio } from \"antd\";\nimport React, { useState, useEffect } from \"react\";\nimport { useContractLoader, useOnBlock } from \"eth-hooks\";\nimport { NETWORKS } from \"../constants\";\nimport { Transactor } from \"../helpers\";\n\n/*\nThis is a component for bridging between L1 & L2\nCurrently it supports Testnet deposits for Arbitrum & Optimism\n\n __          _______ _____\n \\ \\        / /_   _|  __ \\\n  \\ \\  /\\  / /  | | | |__) |\n   \\ \\/  \\/ /   | | |  ___/\n    \\  /\\  /   _| |_| |\n     \\/  \\/   |_____|_|\n\n\n*/\n\nexport default function L2ArbitrumBridge({ address, userSigner }) {\n  const [L1EthBalance, setL1EthBalance] = useState(\"...\");\n  const [L2EthBalance, setL2EthBalance] = useState(\"...\");\n  const [L1Provider, setL1Provider] = useState(\"\");\n  const [L2Provider, setL2Provider] = useState(\"\");\n  const [rollup, setRollup] = useState(\"arbitrum\");\n  const [environment, setEnvironment] = useState(\"test\");\n\n  const rollupConfig = {\n    arbitrum: {\n      test: { L1: NETWORKS.rinkeby, L2: NETWORKS.rinkebyArbitrum },\n      main: { L1: NETWORKS.mainnet, L2: NETWORKS.arbitrum },\n      local: { L1: NETWORKS.localArbitrumL1, L2: NETWORKS.localArbitrum },\n    },\n    optimism: {\n      test: { L1: NETWORKS.kovan, L2: NETWORKS.kovanOptimism },\n      local: { L1: NETWORKS.localOptimismL1, L2: NETWORKS.localOptimism },\n    },\n  };\n\n  const activeConfig = rollupConfig[rollup][environment];\n\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  const tx = Transactor(userSigner);\n\n  useEffect(() => {\n    async function setProviders() {\n      const L1 = activeConfig.L1;\n      const L2 = activeConfig.L2;\n      setL1Provider(new ethers.providers.StaticJsonRpcProvider(L1.rpcUrl));\n      setL2Provider(new ethers.providers.StaticJsonRpcProvider(L2.rpcUrl));\n      setL1EthBalance(\"...\");\n      setL2EthBalance(\"...\");\n    }\n    setProviders();\n  }, [rollup]);\n\n  const contracts = useContractLoader(userSigner, { externalContracts: L1BridgeMetadata, hardhatContracts: {} });\n\n  useOnBlock(L1Provider, async () => {\n    console.log(`⛓ A new mainnet block is here: ${L1Provider._lastBlockNumber}`);\n    const yourL1Balance = await L1Provider.getBalance(address);\n    setL1EthBalance(yourL1Balance ? ethers.utils.formatEther(yourL1Balance) : \"...\");\n    const yourL2Balance = await L2Provider.getBalance(address);\n    setL2EthBalance(yourL2Balance ? ethers.utils.formatEther(yourL2Balance) : \"...\");\n  });\n\n  const { Option } = Select;\n  const formItemLayout = {\n    labelCol: {\n      xs: { span: 24 },\n      sm: { span: 8 },\n    },\n    wrapperCol: {\n      xs: { span: 24 },\n      sm: { span: 12 },\n    },\n  };\n  const tailFormItemLayout = {\n    wrapperCol: {\n      xs: {\n        span: 24,\n        offset: 0,\n      },\n      sm: {\n        span: 12,\n        offset: 8,\n      },\n    },\n  };\n\n  const columns = [\n    {\n      title: \"\",\n      dataIndex: \"token\",\n      key: \"token\",\n      align: \"center\",\n    },\n    {\n      title: `${activeConfig.L1.name} L1 Balance`,\n      dataIndex: \"l1\",\n      key: \"l1\",\n      align: \"center\",\n    },\n    {\n      title: `${activeConfig.L1.name} ${rollup} Balance`,\n      dataIndex: \"l2\",\n      key: \"l2\",\n      align: \"center\",\n    },\n  ];\n\n  const data = [\n    {\n      key: \"1\",\n      token: \"ETH\",\n      l1: \"Ξ\" + L1EthBalance,\n      l2: \"Ξ\" + L2EthBalance,\n    },\n  ];\n\n  const [form] = Form.useForm();\n\n  const onAssetChange = value => {\n    console.log(value);\n  };\n\n  async function onFinish(values) {\n    console.log(contracts);\n    console.log(values.amount.toString());\n    console.log(rollup);\n    let newTx;\n    try {\n      if (rollup === \"arbitrum\") {\n        newTx = await tx(\n          contracts.Inbox.depositEth(1_300_000, {\n            value: utils.parseEther(values.amount.toString()),\n            gasLimit: 300000,\n          }),\n        );\n      } else if (rollup === \"optimism\") {\n        newTx = await tx(\n          contracts.OVM_L1StandardBridge.depositETH(1_300_000, \"0x\", {\n            value: utils.parseEther(values.amount.toString()),\n          }),\n        );\n      }\n      await newTx.wait();\n      console.log(\"woop!\");\n    } catch (e) {\n      console.log(e);\n      console.log(\"something went wrong!\");\n    }\n  }\n\n  const onReset = () => {\n    form.resetFields();\n  };\n\n  const wrongNetwork = selectedChainId !== activeConfig.L1.chainId;\n\n  return (\n    <div style={{ padding: 16, width: 800, margin: \"auto\", marginBottom: 128 }}>\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 800, margin: \"auto\", marginBottom: 128 }}>\n        <h2>Welcome to the L2 Deposit Bridge!</h2>\n        <Radio.Group\n          value={rollup}\n          onChange={e => {\n            setRollup(e.target.value);\n          }}\n          style={{ marginBottom: 10 }}\n        >\n          <Radio.Button value=\"arbitrum\">Arbitrum</Radio.Button>\n          <Radio.Button value=\"optimism\">Optimism</Radio.Button>\n        </Radio.Group>\n\n        <Table columns={columns} dataSource={data} pagination={false} style={{ marginBottom: 20 }} />\n\n        <Form\n          {...formItemLayout}\n          form={form}\n          name=\"control-hooks\"\n          onFinish={onFinish}\n          initialValues={{ assetType: \"eth\" }}\n        >\n          <Form.Item\n            name=\"assetType\"\n            label=\"Select Asset Type\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <Select placeholder=\"Select an asset type\" onChange={onAssetChange} allowClear>\n              <Option value=\"eth\">ETH</Option>\n              <Option disabled value=\"erc20\">\n                ERC-20\n              </Option>\n            </Select>\n          </Form.Item>\n          <Form.Item name=\"address\" label=\"Address\">\n            <Input disabled placeholder={address} />\n          </Form.Item>\n          <Form.Item\n            name=\"amount\"\n            label=\"Amount to bridge\"\n            rules={[\n              {\n                required: true,\n              },\n            ]}\n          >\n            <InputNumber />\n          </Form.Item>\n          <Form.Item {...tailFormItemLayout}>\n            <Button type=\"primary\" htmlType=\"submit\" disabled={wrongNetwork}>\n              {wrongNetwork ? `Switch wallet to ${activeConfig.L1.name}` : \"Deposit\"}\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\n// Arbitrum Inbox https://rinkeby.etherscan.io/address/0xa157dc79ca26d69c3b1282d03ec42bdee2790a8f#code\nconst ArbitrumInboxABI = [\n  {\n    anonymous: false,\n    inputs: [\n      { indexed: true, internalType: \"uint256\", name: \"messageNum\", type: \"uint256\" },\n      { indexed: false, internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"InboxMessageDelivered\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: true, internalType: \"uint256\", name: \"messageNum\", type: \"uint256\" }],\n    name: \"InboxMessageDeliveredFromOrigin\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [{ indexed: false, internalType: \"address\", name: \"newSource\", type: \"address\" }],\n    name: \"WhitelistSourceUpdated\",\n    type: \"event\",\n  },\n  {\n    inputs: [],\n    name: \"bridge\",\n    outputs: [{ internalType: \"contract IBridge\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"l2CallValue\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"maxSubmissionCost\", type: \"uint256\" },\n      { internalType: \"address\", name: \"excessFeeRefundAddress\", type: \"address\" },\n      { internalType: \"address\", name: \"callValueRefundAddress\", type: \"address\" },\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"createRetryableTicket\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"uint256\", name: \"maxSubmissionCost\", type: \"uint256\" }],\n    name: \"depositEth\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"contract IBridge\", name: \"_bridge\", type: \"address\" },\n      { internalType: \"address\", name: \"_whitelist\", type: \"address\" },\n    ],\n    name: \"initialize\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"isMaster\",\n    outputs: [{ internalType: \"bool\", name: \"\", type: \"bool\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendContractTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendL1FundedContractTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendL1FundedUnsignedTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"payable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes\", name: \"messageData\", type: \"bytes\" }],\n    name: \"sendL2Message\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"bytes\", name: \"messageData\", type: \"bytes\" }],\n    name: \"sendL2MessageFromOrigin\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [\n      { internalType: \"uint256\", name: \"maxGas\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"gasPriceBid\", type: \"uint256\" },\n      { internalType: \"uint256\", name: \"nonce\", type: \"uint256\" },\n      { internalType: \"address\", name: \"destAddr\", type: \"address\" },\n      { internalType: \"uint256\", name: \"amount\", type: \"uint256\" },\n      { internalType: \"bytes\", name: \"data\", type: \"bytes\" },\n    ],\n    name: \"sendUnsignedTransaction\",\n    outputs: [{ internalType: \"uint256\", name: \"\", type: \"uint256\" }],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [{ internalType: \"address\", name: \"newSource\", type: \"address\" }],\n    name: \"updateWhitelistSource\",\n    outputs: [],\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    inputs: [],\n    name: \"whitelist\",\n    outputs: [{ internalType: \"address\", name: \"\", type: \"address\" }],\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\n// https://github.com/ethereum-optimism/optimism/blob/2bd49730fa8d2c10953873f0ccc792198a49d5c9/packages/contracts/contracts/optimistic-ethereum/iOVM/bridge/tokens/iOVM_L1StandardBridge.sol\nconst OVM_L1StandardBridgeABI = [\n  \"function depositETH(uint32 _l2Gas,bytes calldata _data) external payable\",\n  \"function depositETHTo(address _to,uint32 _l2Gas,bytes calldata _data) external payable\",\n  \"function finalizeETHWithdrawal (address _from,address _to,uint _amount,bytes calldata _data) external\",\n];\n\nconst L1BridgeMetadata = {\n  // Arbitrium Contract's\n  44010: {\n    contracts: {\n      Inbox: {\n        address: \"0xA4d796Ad4e79aFB703340a596AEd88f8a5924183\",\n        abi: ArbitrumInboxABI,\n      },\n    },\n  },\n  4: {\n    contracts: {\n      Inbox: {\n        address: \"0x578bade599406a8fe3d24fd7f7211c0911f5b29e\",\n        abi: ArbitrumInboxABI,\n      },\n    },\n  },\n  // Optimism Contract's\n  31337: {\n    contracts: {\n      OVM_L1StandardBridge: {\n        address: \"0x998abeb3E57409262aE5b751f60747921B33613E\",\n        abi: OVM_L1StandardBridgeABI,\n      },\n    },\n  },\n  42: {\n    contracts: {\n      OVM_L1StandardBridge: {\n        address: \"0x22F24361D548e5FaAfb36d1437839f080363982B\",\n        abi: OVM_L1StandardBridgeABI,\n      },\n    },\n  },\n};\n","import React, { useState, useEffect } from \"react\";\r\nconst { utils } = require(\"ethers\");\r\nimport { Card, Descriptions, Divider, List, Typography, Row, Col, Button, Space, Input, Spin } from \"antd\";\r\n\r\nimport \"./BoredPunks.css\";\r\n\r\nconst { Title, Paragraph, Text, Link } = Typography;\r\n\r\nexport default function BoredPunksPosition(props) {\r\n  const [createAmount, setCreateAmount] = useState();\r\n  const [showSpan, setShowSpan] = useState();\r\n  const [showSpin, setShowSpin] = useState();\r\n  const [maxRedeem, setMaxRedeem] = useState();\r\n  const [redeemAmount, setRedeemAmount] = useState();\r\n  const [redeemVal, setRedeemVal] = useState();\r\n\r\n  let address = props.address;\r\n  let colBalance = props.usdcBalance ? utils.formatUnits(props.usdcBalance, 6) : 0;\r\n  let longBalance = props.longBalance ? parseFloat(utils.formatUnits(props.longBalance, 6)) : 0;\r\n  let shortBalance = props.shortBalance ? parseFloat(utils.formatUnits(props.shortBalance, 6)) : 0;\r\n  let pairsMinted = props.pairsMinted ? utils.formatUnits(props.pairsMinted, 6) : 0;\r\n  let colAllowance = props.colAllowance ? utils.formatUnits(props.colAllowance, 6) : 0;\r\n\r\n  useEffect(() => {\r\n    let maxiMint\r\n    if(parseFloat(colAllowance) > parseFloat(colBalance)) {\r\n      maxiMint = colBalance\r\n      setShowSpan(true)\r\n    } else {\r\n      maxiMint = colAllowance\r\n      setShowSpan(false)\r\n    }\r\n    setCreateAmount(maxiMint)\r\n\r\n  }, [colBalance, colAllowance]);\r\n\r\n  useEffect(() => {\r\n    let maxRedeem;\r\n    if(longBalance > shortBalance) {\r\n        maxRedeem = shortBalance\r\n      } else {\r\n        maxRedeem = longBalance\r\n      }\r\n    setMaxRedeem(maxRedeem)\r\n    setRedeemVal(maxRedeem)\r\n  }, [shortBalance, longBalance])\r\n\r\n\r\n  return (\r\n    <div className=\"BoredPunksPosition\">\r\n        <Row justify=\"center\">\r\n          <Divider>Create or Redeem Collateralized Long & Short Pairs</Divider>\r\n          <Col span = {11}>\r\n            <Card >\r\n              <Descriptions title=\"Open Long & Short Position\" bordered>\r\n                <Descriptions.Item label=\"Collateral\" span={3}>{colBalance}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Approved\" span={3}>{colAllowance}</Descriptions.Item>\r\n              </Descriptions>\r\n              <Input addonBefore=\"Amount\" value={createAmount} type=\"float\" onChange={e => {\r\n                setCreateAmount(e.target.value)\r\n\r\n                if(parseFloat(e.target.value) > parseFloat(colAllowance)) {\r\n                  setShowSpan(true)\r\n                } else {\r\n                  setShowSpan(false)\r\n                }\r\n                if(e.target.value === '') {\r\n                  setShowSpan(false)\r\n                }\r\n\r\n               }} />\r\n              <Button type=\"primary\"\r\n                onClick={async () => {\r\n                  if(!showSpan) {\r\n                    if(createAmount <= 0) {\r\n                      window.alert(\"Enter a value to get approval or create\")\r\n                    } else {\r\n                      setShowSpin(true)\r\n\r\n                      const result = await props.tx(props.writeContracts.LSP.create(utils.parseUnits(createAmount, 6)))\r\n                      .then((e) => setShowSpin(false))\r\n                    }\r\n\r\n                  } else {\r\n\r\n                    let approvalAmount = createAmount\r\n                    approvalAmount = utils.parseUnits(approvalAmount.toString(), 6)\r\n                    setShowSpin(true)\r\n\r\n                    const lspAddress = props.readContracts && props.readContracts.LSP && props.readContracts.LSP.address;\r\n                    const resultApproval = await props.tx(props.writeContracts.USDC.approve(lspAddress, approvalAmount))\r\n                    .then((e) => setShowSpin(false))\r\n\r\n                  }\r\n\r\n                }}\r\n                  block>{showSpan ? (showSpin ? <Spin /> : \"Approve\") : (showSpin ? <Spin /> : \"Create\")}</Button>\r\n            </Card>\r\n          </Col>\r\n          <Col span={1}></Col>\r\n          <Col span = {12}>\r\n            <Card >\r\n              <Descriptions title=\"Close Long or Short Position\" bordered>\r\n                <Descriptions.Item label=\"Longs\" span={3}>{longBalance}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Shorts\" span={3}>{shortBalance}</Descriptions.Item>\r\n                <Descriptions.Item label=\"L/S Pairs\" span={3}>{maxRedeem}</Descriptions.Item>\r\n                <Descriptions.Item label=\"Expired\" span={3}>No</Descriptions.Item>\r\n              </Descriptions>\r\n              {/*<Input type=\"number\" placeholder='Long tokens to spend'/>\r\n              <Input type=\"number\" placeholder='Short tokens to spend'/>*/}\r\n              <Input addonBefore=\"Pairs\" type=\"float\" value={redeemVal} onChange={e => {\r\n                setRedeemVal(e.target.value)\r\n              }}></Input>\r\n              <Button type=\"primary\"\r\n                onClick={async () => {\r\n                  if(redeemVal > maxRedeem || redeemVal <= 0) {\r\n                    window.alert(\"Select a valid redeem amount\")\r\n                  } else {\r\n                    setShowSpin(true)\r\n                    const result = await props.tx(props.writeContracts.LSP.redeem(utils.parseUnits(redeemVal.toString(), 6)))\r\n                    .then((e) => setShowSpin(false))\r\n                  }\r\n                }}\r\n              danger>\r\n                { showSpin ? <Spin /> : \"Redeem Pairs\" }\r\n              </Button>\r\n              <Button disabled >  { showSpin ? <Spin /> : \"Settle Longs/Shorts\" }</Button>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n    </div>\r\n\r\n\r\n\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nconst { utils } = require(\"ethers\");\r\nimport { Row, Col, Divider, Layout, List, Menu, Breadcrumb, Typography, Space } from \"antd\";\r\nimport \"./BoredPunks.css\";\r\nimport BoredPunksPosition from \"./BoredPunksPosition\";\r\n\r\nconst { Header, Content, Footer } = Layout;\r\nconst { Title, Paragraph, Text, Link } = Typography;\r\n\r\nexport default function BoredPunksApp(props) {\r\n\r\n  // pairName()\r\n  // const pairName = \"USDfw10PUNK Covered Call Token Pair December 2021\";\r\n  // expirationTimestamp()\r\n  const expiry = 'December 31, 2021';\r\n  const collateralCurr = 'USDC';\r\n  const strike = '800000';\r\n  const tvl = '123123'; // TODO\r\n  const ethPrice = props.price ? (props.price == 1 ? 3500 : props.price) : 3500; // XXX $1 on Mumbai\r\n  // longToken() = 0xf497360850367A9F17738392f48080f951959e8C\r\n  // shortToken() = 0x9189a9BEFa7E0799d2470b49948588C14B7A1036\r\n\r\n  const [price, setPrice] = useState(0);\r\n\r\n  const longCollateralValue = (price - 1/parseFloat(strike))/(price);\r\n\r\n  useEffect(async () => {\r\n    const result = await fetch( '/demoprice.json');\r\n    const newPrice = await result.json();\r\n    // setPrice(parseFloat(newPrice.USDfl10PUNK));\r\n    // use ETH price and convert\r\n    setPrice(1/ethPrice * parseFloat(newPrice.ETHfl10PUNK));\r\n\r\n  }, []);\r\n\r\n  return (<div>\r\n\r\n    <Row justify=\"center\">\r\n      <Space>\r\n       <Col span={3}>\r\n\r\n         <div className=\"ProductDiv\">\r\n           <Divider >Product Info</Divider>\r\n           <List itemLayout=\"horizontal\" dataSource={[\r\n             {descr: 'Synth Token Pair Name', content: 'USD / Decile FloorWars CryptoPunks Covered Call' },\r\n             {descr: 'Strike Price (inverted)', content: `${strike} ${collateralCurr}`},\r\n             {descr: 'Expiry', content: expiry},\r\n             {descr: 'Collateral', content: collateralCurr},\r\n             ]}\r\n             renderItem={item => (\r\n               <List.Item>\r\n                 <List.Item.Meta description={item.descr} />\r\n                  {item.content}\r\n               </List.Item>\r\n             )}\r\n           />\r\n         </div>\r\n       </Col>\r\n       <Col span={3}>\r\n         <div className=\"ProductDiv\">\r\n           <Divider >Live Price Data</Divider>\r\n           <List itemLayout=\"horizontal\" dataSource={[\r\n             {descr: 'Total Collateral Locked', content: `${tvl} ${collateralCurr}`},\r\n             {descr: 'Last ETHUSD Price', content: ethPrice},\r\n             {descr: 'Last USDfw10PUNK Price', content: price},\r\n             {descr: 'Last fw10PUNKUSD Price', content: Math.round(1/price)},\r\n             {descr: 'Last Long Token Value in Collateral', content: longCollateralValue},\r\n             ]}\r\n             renderItem={item => (\r\n               <List.Item>\r\n                 <List.Item.Meta description={item.descr} />\r\n                  {item.content}\r\n               </List.Item>\r\n             )}\r\n           />\r\n         </div>\r\n\r\n       </Col>\r\n      </Space>\r\n    </Row>\r\n    <Row justify=\"center\">\r\n      <Space>\r\n       <Col span={8}>\r\n          <BoredPunksPosition tx = {props.tx} address = {props.address} readContracts = {props.readContracts}\r\n            writeContracts = {props.writeContracts} usdcBalance = {props.usdcBalance} longBalance = {props.longBalance}\r\n             shortBalance = {props.shortBalance} pairsMinted={props.pairsMinted} colAllowance={props.colAllowance}/>\r\n       </Col>\r\n      </Space>\r\n    </Row>\r\n\r\n\r\n\r\n  </div>\r\n  );\r\n\r\n}\r\n","import { SyncOutlined } from \"@ant-design/icons\";\nimport { utils } from \"ethers\";\nimport { Button, Card, DatePicker, Divider, Input, List, Progress, Slider, Spin, Switch } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Address, Balance } from \"../components\";\n\nexport default function ExampleUI({\n  purpose,\n  setPurposeEvents,\n  address,\n  mainnetProvider,\n  localProvider,\n  yourLocalBalance,\n  price,\n  tx,\n  readContracts,\n  writeContracts,\n}) {\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n  return (\n    <div>\n      {/*\n        ⚙️ Here is an example UI that displays and sets the purpose in your smart contract:\n      */}\n      <div style={{ border: \"1px solid #cccccc\", padding: 16, width: 400, margin: \"auto\", marginTop: 64 }}>\n        <h2>Example UI:</h2>\n        <h4>purpose: {purpose}</h4>\n        <Divider />\n        <div style={{ margin: 8 }}>\n          <Input\n            onChange={e => {\n              setNewPurpose(e.target.value);\n            }}\n          />\n          <Button\n            style={{ marginTop: 8 }}\n            onClick={async () => {\n              /* look how you call setPurpose on your contract: */\n              /* notice how you pass a call back for tx updates too */\n              const result = tx(writeContracts.YourContract.setPurpose(newPurpose), update => {\n                console.log(\"📡 Transaction Update:\", update);\n                if (update && (update.status === \"confirmed\" || update.status === 1)) {\n                  console.log(\" 🍾 Transaction \" + update.hash + \" finished!\");\n                  console.log(\n                    \" ⛽️ \" +\n                      update.gasUsed +\n                      \"/\" +\n                      (update.gasLimit || update.gas) +\n                      \" @ \" +\n                      parseFloat(update.gasPrice) / 1000000000 +\n                      \" gwei\",\n                  );\n                }\n              });\n              console.log(\"awaiting metamask/web3 confirm result...\", result);\n              console.log(await result);\n            }}\n          >\n            Set Purpose!\n          </Button>\n        </div>\n        <Divider />\n        Your Address:\n        <Address address={address} ensProvider={mainnetProvider} fontSize={16} />\n        <Divider />\n        ENS Address Example:\n        <Address\n          address=\"0x34aA3F359A9D614239015126635CE7732c18fDF3\" /* this will show as austingriffith.eth */\n          ensProvider={mainnetProvider}\n          fontSize={16}\n        />\n        <Divider />\n        {/* use utils.formatEther to display a BigNumber: */}\n        <h2>Your Balance: {yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"}</h2>\n        <div>OR</div>\n        <Balance address={address} provider={localProvider} price={price} />\n        <Divider />\n        <div>🐳 Example Whale Balance:</div>\n        <Balance balance={utils.parseEther(\"1000\")} provider={localProvider} price={price} />\n        <Divider />\n        {/* use utils.formatEther to display a BigNumber: */}\n        <h2>Your Balance: {yourLocalBalance ? utils.formatEther(yourLocalBalance) : \"...\"}</h2>\n        <Divider />\n        Your Contract Address:\n        <Address\n          address={readContracts && readContracts.YourContract ? readContracts.YourContract.address : null}\n          ensProvider={mainnetProvider}\n          fontSize={16}\n        />\n        <Divider />\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* look how you call setPurpose on your contract: */\n              tx(writeContracts.YourContract.setPurpose(\"🍻 Cheers\"));\n            }}\n          >\n            Set Purpose to &quot;🍻 Cheers&quot;\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /*\n              you can also just craft a transaction and send it to the tx() transactor\n              here we are sending value straight to the contract's address:\n            */\n              tx({\n                to: writeContracts.YourContract.address,\n                value: utils.parseEther(\"0.001\"),\n              });\n              /* this should throw an error about \"no fallback nor receive function\" until you add it */\n            }}\n          >\n            Send Value\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* look how we call setPurpose AND send some value along */\n              tx(\n                writeContracts.YourContract.setPurpose(\"💵 Paying for this one!\", {\n                  value: utils.parseEther(\"0.001\"),\n                }),\n              );\n              /* this will fail until you make the setPurpose function payable */\n            }}\n          >\n            Set Purpose With Value\n          </Button>\n        </div>\n        <div style={{ margin: 8 }}>\n          <Button\n            onClick={() => {\n              /* you can also just craft a transaction and send it to the tx() transactor */\n              tx({\n                to: writeContracts.YourContract.address,\n                value: utils.parseEther(\"0.001\"),\n                data: writeContracts.YourContract.interface.encodeFunctionData(\"setPurpose(string)\", [\n                  \"🤓 Whoa so 1337!\",\n                ]),\n              });\n              /* this should throw an error about \"no fallback nor receive function\" until you add it */\n            }}\n          >\n            Another Example\n          </Button>\n        </div>\n      </div>\n\n      {/*\n        📑 Maybe display a list of events?\n          (uncomment the event and emit line in YourContract.sol! )\n      */}\n      <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 32 }}>\n        <h2>Events:</h2>\n        <List\n          bordered\n          dataSource={setPurposeEvents}\n          renderItem={item => {\n            return (\n              <List.Item key={item.blockNumber + \"_\" + item.sender + \"_\" + item.purpose}>\n                <Address address={item[0]} ensProvider={mainnetProvider} fontSize={16} />\n                {item[1]}\n              </List.Item>\n            );\n          }}\n        />\n      </div>\n\n      <div style={{ width: 600, margin: \"auto\", marginTop: 32, paddingBottom: 256 }}>\n        <Card>\n          Check out all the{\" \"}\n          <a\n            href=\"https://github.com/austintgriffith/scaffold-eth/tree/master/packages/react-app/src/components\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            📦 components\n          </a>\n        </Card>\n\n        <Card style={{ marginTop: 32 }}>\n          <div>\n            There are tons of generic components included from{\" \"}\n            <a href=\"https://ant.design/components/overview/\" target=\"_blank\" rel=\"noopener noreferrer\">\n              🐜 ant.design\n            </a>{\" \"}\n            too!\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            <Button type=\"primary\">Buttons</Button>\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            <SyncOutlined spin /> Icons\n          </div>\n\n          <div style={{ marginTop: 8 }}>\n            Date Pickers?\n            <div style={{ marginTop: 2 }}>\n              <DatePicker onChange={() => {}} />\n            </div>\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Slider range defaultValue={[20, 50]} onChange={() => {}} />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Switch defaultChecked onChange={() => {}} />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Progress percent={50} status=\"active\" />\n          </div>\n\n          <div style={{ marginTop: 32 }}>\n            <Spin />\n          </div>\n        </Card>\n      </div>\n    </div>\n  );\n}\n","import { utils } from \"ethers\";\nimport { Select } from \"antd\";\nimport React, { useState } from \"react\";\nimport { Address, AddressInput } from \"../components\";\nimport { useTokenList } from \"eth-hooks/dapps/dex\";\n\nconst { Option } = Select;\n\nexport default function Hints({ yourLocalBalance, mainnetProvider, price, address }) {\n  // Get a list of tokens from a tokenlist -> see tokenlists.org!\n  const [selectedToken, setSelectedToken] = useState(\"Pick a token!\");\n  const listOfTokens = useTokenList(\n    \"https://raw.githubusercontent.com/SetProtocol/uniswap-tokenlist/main/set.tokenlist.json\",\n  );\n\n  return (\n    <div>\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>👷</span>\n        Edit your <b>contract</b> in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat/contracts\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🛰</span>\n        <b>compile/deploy</b> with\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run deploy\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚀</span>\n        Your <b>contract artifacts</b> are automatically injected into your frontend at\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/react-app/src/contracts/\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🎛</span>\n        Edit your <b>frontend</b> in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/reactapp/src/App.js\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔭</span>\n        explore the\n        <span\n          className=\"highlight\"\n          style={{\n            marginLeft: 4,\n            marginRight: 4,\n            /* backgroundColor: \"#f9f9f9\", */\n            padding: 4,\n            borderRadius: 4,\n            fontWeight: \"bolder\",\n          }}\n        >\n          🖇 hooks\n        </span>\n        and\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          📦 components\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        for example, the\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          useBalance()\n        </span>{\" \"}\n        hook keeps track of your balance: <b>{utils.formatEther(yourLocalBalance || 0)}</b>\n      </div>\n\n      <div style={{ margin: 8 }}>\n        <div>\n          <b>useTokenList()</b> can get you an array of tokens from{\" \"}\n          <a href=\"https://tokenlists.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n            tokenlists.org!\n          </a>\n        </div>\n        <Select\n          showSearch\n          value={selectedToken}\n          onChange={value => {\n            console.log(`selected ${value}`);\n            setSelectedToken(value);\n          }}\n          filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\n          optionFilterProp=\"children\"\n        >\n          {listOfTokens.map(token => (\n            <Option key={token.symbol} value={token.symbol}>\n              {token.symbol}\n            </Option>\n          ))}\n        </Select>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        as you build your app you&apos;ll need web3 specific components like an\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          {\"<AddressInput/>\"}\n        </span>\n        component:\n        <div style={{ width: 350, padding: 16, margin: \"auto\" }}>\n          <AddressInput ensProvider={mainnetProvider} />\n        </div>\n        <div>(try putting in your address, an ens address, or scanning a QR code)</div>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        this balance could be multiplied by\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          price\n        </span>{\" \"}\n        that is loaded with the\n        <span\n          className=\"highlight\"\n          style={{ margin: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          usePrice\n        </span>{\" \"}\n        hook with the current value: <b>${price}</b>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💧</span>\n        use the <b>faucet</b> to send funds to\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          <Address address={address} minimized /> {address}\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>📡</span>\n        deploy to a testnet or mainnet by editing\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat/hardhat.config.js\n        </span>\n        and running\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run deploy\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🔑</span>\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run generate\n        </span>\n        will create a deployer account in\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          packages/hardhat\n        </span>\n        <div style={{ marginTop: 8 }}>\n          (use{\" \"}\n          <span\n            className=\"highlight\"\n            style={{\n              marginLeft: 4,\n              /* backgroundColor: \"#f1f1f1\", */ padding: 4,\n              borderRadius: 4,\n              fontWeight: \"bolder\",\n            }}\n          >\n            yarn run account\n          </span>{\" \"}\n          to display deployer address and balance)\n        </div>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>⚙️</span>\n        build your app with\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run build\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>🚢</span>\n        ship it!\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run surge\n        </span>\n        or\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run s3\n        </span>\n        or\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f1f1f1\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          yarn run ipfs\n        </span>\n      </div>\n\n      <div style={{ marginTop: 32 }}>\n        <span style={{ marginRight: 8 }}>💬</span>\n        for support, join this\n        <span\n          className=\"highlight\"\n          style={{ marginLeft: 4, /* backgroundColor: \"#f9f9f9\", */ padding: 4, borderRadius: 4, fontWeight: \"bolder\" }}\n        >\n          <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\">\n            Telegram Chat\n          </a>\n        </span>\n      </div>\n      <div style={{ padding: 128 }}>\n        🛠 Check out your browser&apos;s developer console for more... (inspect console) 🚀\n      </div>\n    </div>\n  );\n}\n","import { gql, useQuery } from \"@apollo/client\";\nimport { Button, Input, Table, Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport GraphiQL from \"graphiql\";\nimport \"graphiql/graphiql.min.css\";\nimport fetch from \"isomorphic-fetch\";\nimport React, { useState } from \"react\";\nimport { Address } from \"../components\";\n\nconst highlight = {\n  marginLeft: 4,\n  marginRight: 8,\n  /* backgroundColor: \"#f9f9f9\", */ padding: 4,\n  borderRadius: 4,\n  fontWeight: \"bolder\",\n};\n\nfunction Subgraph(props) {\n  function graphQLFetcher(graphQLParams) {\n    return fetch(props.subgraphUri, {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(graphQLParams),\n    }).then(response => response.json());\n  }\n\n  const EXAMPLE_GRAPHQL = `\n  {\n    purposes(first: 25, orderBy: createdAt, orderDirection: desc) {\n      id\n      purpose\n      createdAt\n      sender {\n        id\n      }\n    }\n    senders {\n      id\n      address\n      purposeCount\n    }\n  }\n  `;\n  const EXAMPLE_GQL = gql(EXAMPLE_GRAPHQL);\n  const { loading, data } = useQuery(EXAMPLE_GQL, { pollInterval: 2500 });\n\n  const purposeColumns = [\n    {\n      title: \"Purpose\",\n      dataIndex: \"purpose\",\n      key: \"purpose\",\n    },\n    {\n      title: \"Sender\",\n      key: \"id\",\n      render: record => <Address value={record.sender.id} ensProvider={props.mainnetProvider} fontSize={16} />,\n    },\n    {\n      title: \"createdAt\",\n      key: \"createdAt\",\n      dataIndex: \"createdAt\",\n      render: d => new Date(d * 1000).toISOString(),\n    },\n  ];\n\n  const [newPurpose, setNewPurpose] = useState(\"loading...\");\n\n  const deployWarning = (\n    <div style={{ marginTop: 8, padding: 8 }}>Warning: 🤔 Have you deployed your subgraph yet?</div>\n  );\n\n  return (\n    <>\n      <div style={{ margin: \"auto\", marginTop: 32 }}>\n        You will find that parsing/tracking events with the{\" \"}\n        <span className=\"highlight\" style={highlight}>\n          useEventListener\n        </span>{\" \"}\n        hook becomes a chore for every new project.\n      </div>\n      <div style={{ margin: \"auto\", marginTop: 32 }}>\n        Instead, you can use{\" \"}\n        <a href=\"https://thegraph.com/docs/about/introduction\" target=\"_blank\" rel=\"noopener noreferrer\">\n          The Graph\n        </a>{\" \"}\n        with 🏗 scaffold-eth (\n        <a href=\"https://youtu.be/T5ylzOTkn-Q\" target=\"_blank\" rel=\"noopener noreferrer\">\n          learn more\n        </a>\n        ):\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚮</span>\n        Clean up previous data:\n        <span className=\"highlight\" style={highlight}>\n          yarn clean-graph-node\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>📡</span>\n        Spin up a local graph node by running\n        <span className=\"highlight\" style={highlight}>\n          yarn run-graph-node\n        </span>\n        <span style={{ marginLeft: 4 }}>\n          {\" \"}\n          (requires{\" \"}\n          <a href=\"https://www.docker.com/products/docker-desktop\" target=\"_blank\" rel=\"noopener noreferrer\">\n            {\" \"}\n            Docker\n          </a>\n          ){\" \"}\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>📝</span>\n        Create your <b>local subgraph</b> by running\n        <span className=\"highlight\" style={highlight}>\n          yarn graph-create-local\n        </span>\n        (only required once!)\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🚢</span>\n        Deploy your <b>local subgraph</b> by running\n        <span className=\"highlight\" style={highlight}>\n          yarn graph-ship-local\n        </span>\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🖍️</span>\n        Edit your <b>local subgraph</b> in\n        <span className=\"highlight\" style={highlight}>\n          packages/subgraph/src\n        </span>\n        (learn more about subgraph definition{\" \"}\n        <a href=\"https://thegraph.com/docs/define-a-subgraph\" target=\"_blank\" rel=\"noopener noreferrer\">\n          here\n        </a>\n        )\n      </div>\n\n      <div style={{ margin: 32 }}>\n        <span style={{ marginRight: 8 }}>🤩</span>\n        Deploy your <b>contracts and your subgraph</b> in one go by running\n        <span className=\"highlight\" style={highlight}>\n          yarn deploy-and-graph\n        </span>\n      </div>\n\n      <div style={{ width: 780, margin: \"auto\", paddingBottom: 64 }}>\n        <div style={{ margin: 32, textAlign: \"right\" }}>\n          <Input\n            onChange={e => {\n              setNewPurpose(e.target.value);\n            }}\n          />\n          <Button\n            onClick={() => {\n              console.log(\"newPurpose\", newPurpose);\n              /* look how you call setPurpose on your contract: */\n              props.tx(props.writeContracts.YourContract.setPurpose(newPurpose));\n            }}\n          >\n            Set Purpose\n          </Button>\n        </div>\n\n        {data ? (\n          <Table dataSource={data.purposes} columns={purposeColumns} rowKey=\"id\" />\n        ) : (\n          <Typography>{loading ? \"Loading...\" : deployWarning}</Typography>\n        )}\n\n        <div style={{ margin: 32, height: 400, border: \"1px solid #888888\", textAlign: \"left\" }}>\n          <GraphiQL fetcher={graphQLFetcher} docExplorerOpen query={EXAMPLE_GRAPHQL} />\n        </div>\n      </div>\n\n      <div style={{ padding: 64 }}>...</div>\n    </>\n  );\n}\n\nexport default Subgraph;\n","import { SyncOutlined } from \"@ant-design/icons\";\r\nimport { utils } from \"ethers\";\r\nimport { Button, Card, Col, Collapse, DatePicker, Divider, Input, InputNumber, List, Progress, Row, Slider, Spin, Steps, Switch, Typography, Layout, Menu, Breadcrumb } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { Address, Balance, BoredPunksApp, SwapInfo } from \"../components\";\r\nimport { useContractReader } from \"eth-hooks\"\r\nimport \"../BoredPunks.css\"\r\n\r\nconst { Header, Content, Footer } = Layout;\r\nconst { Step } = Steps;\r\nconst { Panel } = Collapse;\r\nconst { Title, Paragraph, Text, Link } = Typography;\r\n\r\nexport default function BoredPunks({\r\n  address,\r\n  price,\r\n  usdcBalance,\r\n  longBalance,\r\n  shortBalance,\r\n  pairsMinted,\r\n  colAllowance,\r\n  tx,\r\n  mainnetProvider,\r\n  readContracts,\r\n  writeContracts,\r\n}) {\r\n  // const [longAmount, setLongAmount] = useState(0);\r\n  // const [shortAmount, setShortAmount] = useState(0);\r\n\r\n  // const formattedLong = longBalance / (10**6)\r\n  // const formattedShort = shortBalance / (10**6)\r\n  // const formattedBalance = usdcBalance / (10**6)\r\n\r\n  const [slideAmount, setSlideAmount] = useState(400000);\r\n\r\n  return (\r\n\r\n    <Layout className=\"layout\">\r\n     <Header>\r\n       <h1 style={{color:'white'}}>FloorWars Synthetics - USD vs CryptoPunks Decile Floor</h1>\r\n     </Header>\r\n     <Content style={{ padding: '0 50px' }}>\r\n       <div className=\"site-layout-content\">\r\n         <Typography>\r\n           <Title level={3}>USDfw10PUNKc800-1221 : CryptoPunks Floor Call Options</Title>\r\n           <Paragraph>\r\n             <code>USDfw10PUNKc800-1221</code> is a covered call option on USD versus the Decile Floor CryptoPunks index price converted from ETH to USD. Token pairs are minted and collateralized by 1 USDC and represent 1 USDC worth of risk versus the price of USD in fw10PUNK at expiry. Long tokens expire worthless if more than $800,000 USDC is needed for 1 theoretical \"fw10PUNK\" otherwise are valued at the difference proportionate to the expiry price. For example, if fw10PUNKUSD (the inverse price) settles at $400,000 on December 31st, each long token will be worth: <code>(1/200000 - 1/800000)/(1/200000) = 0.75</code> so $0.75 USDC per token. Short tokens are worth the remainder of the $1 of collateral, e.g. <code>1 - 0.75 = 0.25</code> so $0.25.\r\n           </Paragraph>\r\n           <Paragraph>Let's simulate how the long token settles as the USD price of 1 fw10PUNK changes.\r\n           </Paragraph>\r\n           <Row>\r\n             <Col span={12}>\r\n               <Slider\r\n                 min={1}\r\n                 max={800000}\r\n                 onChange={setSlideAmount}\r\n                 value={typeof slideAmount === 'number' ? slideAmount : 1}\r\n               />\r\n             </Col>\r\n             <Col span={4}>\r\n               <InputNumber\r\n                 min={1}\r\n                 max={800000}\r\n                 style={{ margin: '0 16px' }}\r\n                 value={slideAmount}\r\n                 onChange={setSlideAmount}\r\n               />\r\n             </Col>\r\n            <Paragraph>1 Long token is worth: { (1/slideAmount - 1/800000)/(1/slideAmount) } of $1 collateral</Paragraph>\r\n           </Row>\r\n         </Typography>\r\n         <Collapse defaultActiveKey={['1']} >\r\n           <Panel header=\"Steps to create a synthetic position on CryptoPunks\" key=\"1\">\r\n             <Steps direction=\"vertical\" current={0}>\r\n               <Step title=\"Create Position\" description=\"Lock up collateral (USDC)to mint long and short synth tokens representing a covered call option.\" />\r\n               <Step title=\"Sell Tokens\" description=\"Take a long or short position by selling tokens to speculators. No need to worry about liquidation as positions are always fully collateralized.\" />\r\n               <Step title=\"Redeem\" description=\"After expiry, redeem remaining or purchased tokens for collateral.\" />\r\n             </Steps>\r\n           </Panel>\r\n         </Collapse>\r\n\r\n          <BoredPunksApp address={address} price={price} tx={tx} readContracts={readContracts} writeContracts={writeContracts}\r\n           usdcBalance={usdcBalance} longBalance = {longBalance} shortBalance = {shortBalance} pairsMinted = {pairsMinted}\r\n           colAllowance={colAllowance}/>\r\n         <SwapInfo tx={tx} readContracts={readContracts} writeContracts={writeContracts} />\r\n       </div>\r\n     </Content>\r\n   </Layout>\r\n\r\n\r\n\r\n\r\n  );\r\n}\r\n","import WalletConnectProvider from \"@walletconnect/web3-provider\";\n//import Torus from \"@toruslabs/torus-embed\"\nimport WalletLink from \"walletlink\";\nimport { Alert, Button, Col, Menu, Row } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport React, { useCallback, useEffect, useState } from \"react\";\nimport { BrowserRouter, Link, Route, Switch } from \"react-router-dom\";\nimport Web3Modal from \"web3modal\";\nimport \"./App.css\";\nimport { Account, Contract, Faucet, GasGauge, Header, Ramp, ThemeSwitch } from \"./components\";\nimport { INFURA_ID, NETWORK, NETWORKS } from \"./constants\";\nimport { Transactor } from \"./helpers\";\nimport {\n  useBalance,\n  useContractLoader,\n  useContractReader,\n  useGasPrice,\n  useOnBlock,\n  useUserProviderAndSigner,\n} from \"eth-hooks\";\nimport { useEventListener } from \"eth-hooks/events/useEventListener\";\nimport { useExchangeEthPrice } from \"eth-hooks/dapps/dex\";\n// import Hints from \"./Hints\";\nimport { ExampleUI, Hints, Subgraph, BoredPunks } from \"./views\";\n\n// contracts\nimport deployedContracts from \"./contracts/hardhat_contracts.json\";\nimport externalContracts from \"./contracts/external_contracts\";\n\nimport { useContractConfig } from \"./hooks\";\nimport Portis from \"@portis/web3\";\nimport Fortmatic from \"fortmatic\";\nimport Authereum from \"authereum\";\n\nconst { ethers } = require(\"ethers\");\n/*\n    Welcome to 🏗 scaffold-eth !\n\n    Code:\n    https://github.com/scaffold-eth/scaffold-eth\n\n    Support:\n    https://t.me/joinchat/KByvmRe5wkR-8F_zz6AjpA\n    or DM @austingriffith on twitter or telegram\n\n    You should get your own Infura.io ID and put it in `constants.js`\n    (this is your connection to the main Ethereum network for ENS etc.)\n\n\n    🌏 EXTERNAL CONTRACTS:\n    You can also bring in contract artifacts in `constants.js`\n    (and then use the `useExternalContractLoader()` hook!)\n*/\n\n/// 📡 What chain are your contracts deployed to?\nconst targetNetwork = NETWORKS.matic; // <------- select your target frontend network (localhost, rinkeby, xdai, mainnet)\n\n// 😬 Sorry for all the console logging\nconst DEBUG = false;\nconst NETWORKCHECK = true;\n\n// 🛰 providers\nif (DEBUG) console.log(\"📡 Connecting to Matic Mainnet\");\n// const mainnetProvider = getDefaultProvider(\"mainnet\", { infura: INFURA_ID, etherscan: ETHERSCAN_KEY, quorum: 1 });\n// const mainnetProvider = new InfuraProvider(\"mainnet\",INFURA_ID);\n//\n// attempt to connect to our own scaffold eth rpc and if that fails fall back to infura...\n// Using StaticJsonRpcProvider as the chainId won't change see https://github.com/ethers-io/ethers.js/issues/901\n// const scaffoldEthProvider = navigator.onLine\n//   ? new ethers.providers.StaticJsonRpcProvider(\"https://rpc.scaffoldeth.io:48544\")\n//   : null;\n// const poktMainnetProvider = navigator.onLine\n//   ? new ethers.providers.StaticJsonRpcProvider(\n//       \"https://eth-mainnet.gateway.pokt.network/v1/lb/611156b4a585a20035148406\",\n//     )\n//   : null;\n// const mainnetInfura = navigator.onLine\n//   ? new ethers.providers.StaticJsonRpcProvider(\"https://mainnet.infura.io/v3/\" + INFURA_ID)\n//   : null;\nconst mumbaiProvider = new ethers.providers.StaticJsonRpcProvider(targetNetwork.rpcUrl)\n// ( ⚠️ Getting \"failed to meet quorum\" errors? Check your INFURA_ID\n// 🏠 Your local provider is usually pointed at your local blockchain\nconst localProviderUrl = targetNetwork.rpcUrl;\n// as you deploy to other networks you can set REACT_APP_PROVIDER=https://dai.poa.network in packages/react-app/.env\nconst localProviderUrlFromEnv = process.env.REACT_APP_PROVIDER ? process.env.REACT_APP_PROVIDER : localProviderUrl;\nif (DEBUG) console.log(\"🏠 Connecting to provider:\", localProviderUrlFromEnv);\nconst localProvider = new ethers.providers.StaticJsonRpcProvider(localProviderUrlFromEnv);\n\n// 🔭 block explorer URL\nconst blockExplorer = targetNetwork.blockExplorer;\n\n// Coinbase walletLink init\nconst walletLink = new WalletLink({\n  appName: \"coinbase\",\n});\n\n// WalletLink provider\nconst walletLinkProvider = walletLink.makeWeb3Provider(`https://mainnet.infura.io/v3/${INFURA_ID}`, 1);\n\n// Portis ID: 6255fb2b-58c8-433b-a2c9-62098c05ddc9\n/*\n  Web3 modal helps us \"connect\" external wallets:\n*/\nconst web3Modal = new Web3Modal({\n  network: \"mainnet\", // Optional. If using WalletConnect on xDai, change network to \"xdai\" and add RPC info below for xDai chain.\n  cacheProvider: true, // optional\n  theme: \"light\", // optional. Change to \"dark\" for a dark theme.\n  providerOptions: {\n    walletconnect: {\n      package: WalletConnectProvider, // required\n      options: {\n        bridge: \"https://polygon.bridge.walletconnect.org\",\n        infuraId: INFURA_ID,\n        rpc: {\n          1: `https://mainnet.infura.io/v3/${INFURA_ID}`, // mainnet // For more WalletConnect providers: https://docs.walletconnect.org/quick-start/dapps/web3-provider#required\n          42: `https://kovan.infura.io/v3/${INFURA_ID}`,\n          100: \"https://dai.poa.network\", // xDai\n        },\n      },\n    },\n    portis: {\n      display: {\n        logo: \"https://user-images.githubusercontent.com/9419140/128913641-d025bc0c-e059-42de-a57b-422f196867ce.png\",\n        name: \"Portis\",\n        description: \"Connect to Portis App\",\n      },\n      package: Portis,\n      options: {\n        id: \"6255fb2b-58c8-433b-a2c9-62098c05ddc9\",\n      },\n    },\n    fortmatic: {\n      package: Fortmatic, // required\n      options: {\n        key: \"pk_live_5A7C91B2FC585A17\", // required\n      },\n    },\n    // torus: {\n    //   package: Torus,\n    //   options: {\n    //     networkParams: {\n    //       host: \"https://localhost:8545\", // optional\n    //       chainId: 1337, // optional\n    //       networkId: 1337 // optional\n    //     },\n    //     config: {\n    //       buildEnv: \"development\" // optional\n    //     },\n    //   },\n    // },\n    \"custom-walletlink\": {\n      display: {\n        logo: \"https://play-lh.googleusercontent.com/PjoJoG27miSglVBXoXrxBSLveV6e3EeBPpNY55aiUUBM9Q1RCETKCOqdOkX2ZydqVf0\",\n        name: \"Coinbase\",\n        description: \"Connect to Coinbase Wallet (not Coinbase App)\",\n      },\n      package: walletLinkProvider,\n      connector: async (provider, _options) => {\n        await provider.enable();\n        return provider;\n      },\n    },\n    authereum: {\n      package: Authereum, // required\n    },\n  },\n});\n\nfunction App(props) {\n  const mainnetProvider = mumbaiProvider ? mumbaiProvider : null;\n    // poktMainnetProvider && poktMainnetProvider._isProvider\n    //   ? poktMainnetProvider\n    //   : scaffoldEthProvider && scaffoldEthProvider._network\n    //   ? scaffoldEthProvider\n    //   : mumbaiProvider\n    //   ? mumbaiProvider\n\n\n  const [injectedProvider, setInjectedProvider] = useState();\n  const [address, setAddress] = useState();\n\n  const logoutOfWeb3Modal = async () => {\n    await web3Modal.clearCachedProvider();\n    if (injectedProvider && injectedProvider.provider && typeof injectedProvider.provider.disconnect == \"function\") {\n      await injectedProvider.provider.disconnect();\n    }\n    setTimeout(() => {\n      window.location.reload();\n    }, 1);\n  };\n\n  /* 💵 This hook will get the price of ETH from 🦄 Uniswap: */\n  const price = useExchangeEthPrice(targetNetwork, mainnetProvider);\n  /* 🔥 This hook will get the price of Gas from ⛽️ EtherGasStation */\n  const gasPrice = useGasPrice(targetNetwork, \"fast\");\n  // Use your injected provider from 🦊 Metamask or if you don't have it then instantly generate a 🔥 burner wallet.\n  const userProviderAndSigner = useUserProviderAndSigner(injectedProvider, localProvider);\n  const userSigner = userProviderAndSigner.signer;\n\n  useEffect(() => {\n    async function getAddress() {\n      if (userSigner) {\n        const newAddress = await userSigner.getAddress();\n        setAddress(newAddress);\n      }\n    }\n    getAddress();\n  }, [userSigner]);\n\n  // You can warn the user if you would like them to be on a specific network\n  const localChainId = localProvider && localProvider._network && localProvider._network.chainId;\n  const selectedChainId =\n    userSigner && userSigner.provider && userSigner.provider._network && userSigner.provider._network.chainId;\n\n  // For more hooks, check out 🔗eth-hooks at: https://www.npmjs.com/package/eth-hooks\n\n  // The transactor wraps transactions and provides notificiations\n  const tx = Transactor(userSigner, gasPrice);\n\n  // Faucet Tx can be used to send funds from the faucet\n  const faucetTx = Transactor(localProvider, gasPrice);\n\n  // 🏗 scaffold-eth is full of handy hooks like this one to get your balance:\n  const yourLocalBalance = useBalance(localProvider, address);\n\n  // Just plug in different 🛰 providers to get your balance on different chains:\n  const yourMainnetBalance = useBalance(mainnetProvider, address);\n\n  // const contractConfig = useContractConfig();\n\n  const contractConfig = { deployedContracts: deployedContracts || {}, externalContracts: externalContracts || {} };\n\n  // Load in your local 📝 contract and read a value from it:\n  const readContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to make 🔐 write transactions to your contracts, use the userSigner:\n  const writeContracts = useContractLoader(userSigner, contractConfig, targetNetwork.chainId);\n\n  // EXTERNAL CONTRACT EXAMPLE:\n  //\n  // If you want to bring in the mainnet DAI contract it would look like:\n  const mainnetContracts = useContractLoader(mainnetProvider, contractConfig);\n\n  // If you want to call a function on a new block\n  // useOnBlock(mainnetProvider, () => {\n  //   console.log(`⛓ A new mainnet block is here: ${mainnetProvider._lastBlockNumber}`);\n  // });\n\n  // Then read your DAI balance like:\n  const myMainnetDAIBalance = useContractReader(mainnetContracts, \"DAI\", \"balanceOf\", [\n    address,\n  ]);\n\n  const myMainnetUSDCBalance = useContractReader(mainnetContracts, \"USDC\", \"balanceOf\", [\n    address,\n  ]);\n\n  const lspTokenBalance = useContractReader(mainnetContracts, \"LSP\", \"getPositionTokens\", [\n    address,\n  ]);\n  let pairsMinted = 0;\n\n  if (lspTokenBalance) {\n    pairsMinted = lspTokenBalance[0]\n    \n  }\n\n  const longBalance = useContractReader(mainnetContracts, \"LONG\", \"balanceOf\", [\n    address,\n  ])\n\n  const shortBalance = useContractReader(mainnetContracts, \"SHORT\", \"balanceOf\", [\n    address,\n  ])\n\n  const lspAddress = readContracts && readContracts.LSP && readContracts.LSP.address ? readContracts.LSP.address : \"0x0\";\n\n  const colAllowance = useContractReader(mainnetContracts, \"USDC\", \"allowance\", [\n    address,\n    lspAddress,\n  ])\n\n  // keep track of a variable from the contract in the local React state:\n  const purpose = useContractReader(readContracts, \"YourContract\", \"purpose\");\n\n  // 📟 Listen for broadcast events\n  const setPurposeEvents = useEventListener(readContracts, \"YourContract\", \"SetPurpose\", localProvider, 1);\n\n  /*\n  const addressFromENS = useResolveName(mainnetProvider, \"austingriffith.eth\");\n  console.log(\"🏷 Resolved austingriffith.eth as:\",addressFromENS)\n  */\n\n  //\n  // 🧫 DEBUG 👨🏻‍🔬\n  //\n  useEffect(() => {\n    if (\n      DEBUG &&\n      mainnetProvider &&\n      address &&\n      selectedChainId &&\n      yourLocalBalance &&\n      yourMainnetBalance &&\n      readContracts &&\n      writeContracts &&\n      mainnetContracts\n    ) {\n      console.log(\"_____________________________________ 🏗 scaffold-eth _____________________________________\");\n      console.log(\"🌎 mainnetProvider\", mainnetProvider);\n      console.log(\"🏠 localChainId\", localChainId);\n      console.log(\"👩‍💼 selected address:\", address);\n      console.log(\"🕵🏻‍♂️ selectedChainId:\", selectedChainId);\n      console.log(\"💵 yourLocalBalance\", yourLocalBalance ? ethers.utils.formatEther(yourLocalBalance) : \"...\");\n      console.log(\"💵 yourMainnetBalance\", yourMainnetBalance ? ethers.utils.formatEther(yourMainnetBalance) : \"...\");\n      console.log(\"📝 readContracts\", readContracts);\n      console.log(\"🌍 DAI contract on mainnet:\", mainnetContracts);\n      console.log(\"💵 yourMainnetDAIBalance\", myMainnetDAIBalance);\n      console.log(\"🔐 writeContracts\", writeContracts);\n    }\n  }, [\n    mainnetProvider,\n    address,\n    selectedChainId,\n    yourLocalBalance,\n    yourMainnetBalance,\n    readContracts,\n    writeContracts,\n    mainnetContracts,\n  ]);\n\n  let networkDisplay = \"\";\n  if (NETWORKCHECK && localChainId && selectedChainId && localChainId !== selectedChainId) {\n    const networkSelected = NETWORK(selectedChainId);\n    const networkLocal = NETWORK(localChainId);\n    if (selectedChainId === 1337 && localChainId === 31337) {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network ID\"\n            description={\n              <div>\n                You have <b>chain id 1337</b> for localhost and you need to change it to <b>31337</b> to work with\n                HardHat.\n                <div>(MetaMask -&gt; Settings -&gt; Networks -&gt; Chain ID -&gt; 31337)</div>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    } else {\n      networkDisplay = (\n        <div style={{ zIndex: 2, position: \"absolute\", right: 0, top: 60, padding: 16 }}>\n          <Alert\n            message=\"⚠️ Wrong Network\"\n            description={\n              <div>\n                You have <b>{networkSelected && networkSelected.name}</b> selected and you need to be on{\" \"}\n                <Button\n                  onClick={async () => {\n                    const ethereum = window.ethereum;\n                    const data = [\n                      {\n                        chainId: \"0x\" + targetNetwork.chainId.toString(16),\n                        chainName: targetNetwork.name,\n                        nativeCurrency: targetNetwork.nativeCurrency,\n                        rpcUrls: [targetNetwork.rpcUrl],\n                        blockExplorerUrls: [targetNetwork.blockExplorer],\n                      },\n                    ];\n                    console.log(\"data\", data);\n\n                    let switchTx;\n                    // https://docs.metamask.io/guide/rpc-api.html#other-rpc-methods\n                    try {\n                      switchTx = await ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [{ chainId: data[0].chainId }],\n                      });\n                    } catch (switchError) {\n                      // not checking specific error code, because maybe we're not using MetaMask\n                      try {\n                        switchTx = await ethereum.request({\n                          method: \"wallet_addEthereumChain\",\n                          params: data,\n                        });\n                      } catch (addError) {\n                        // handle \"add\" error\n                      }\n                    }\n\n                    if (switchTx) {\n                      console.log(switchTx);\n                    }\n                  }}\n                >\n                  <b>{networkLocal && networkLocal.name}</b>\n                </Button>\n              </div>\n            }\n            type=\"error\"\n            closable={false}\n          />\n        </div>\n      );\n    }\n  } else {\n    networkDisplay = (\n      <div style={{ zIndex: -1, position: \"absolute\", right: 154, top: 28, padding: 16, color: targetNetwork.color }}>\n        {targetNetwork.name}\n      </div>\n    );\n  }\n\n  const loadWeb3Modal = useCallback(async () => {\n    const provider = await web3Modal.connect();\n    setInjectedProvider(new ethers.providers.Web3Provider(provider));\n\n    provider.on(\"chainChanged\", chainId => {\n      console.log(`chain changed to ${chainId}! updating providers`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    provider.on(\"accountsChanged\", () => {\n      console.log(`account changed!`);\n      setInjectedProvider(new ethers.providers.Web3Provider(provider));\n    });\n\n    // Subscribe to session disconnection\n    provider.on(\"disconnect\", (code, reason) => {\n      console.log(code, reason);\n      logoutOfWeb3Modal();\n    });\n  }, [setInjectedProvider]);\n\n  useEffect(() => {\n    if (web3Modal.cachedProvider) {\n      loadWeb3Modal();\n    }\n  }, [loadWeb3Modal]);\n\n  const [route, setRoute] = useState();\n  useEffect(() => {\n    setRoute(window.location.pathname);\n  }, [setRoute]);\n\n  let faucetHint = \"\";\n  const faucetAvailable = localProvider && localProvider.connection && targetNetwork.name.indexOf(\"local\") !== -1;\n\n  const [faucetClicked, setFaucetClicked] = useState(false);\n  if (\n    !faucetClicked &&\n    localProvider &&\n    localProvider._network &&\n    localProvider._network.chainId === 31337 &&\n    yourLocalBalance &&\n    ethers.utils.formatEther(yourLocalBalance) <= 0\n  ) {\n    faucetHint = (\n      <div style={{ padding: 16 }}>\n        <Button\n          type=\"primary\"\n          onClick={() => {\n            faucetTx({\n              to: address,\n              value: ethers.utils.parseEther(\"0.01\"),\n            });\n            setFaucetClicked(true);\n          }}\n        >\n          💰 Grab funds from the faucet ⛽️\n        </Button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"App\">\n      {/* ✏️ Edit the header and change the title to your project name */}\n      <Header />\n      {networkDisplay}\n      <BrowserRouter>\n        {/*\n        <Menu style={{ textAlign: \"center\" }} selectedKeys={[route]} mode=\"horizontal\">\n          <Menu.Item key=\"/\">\n            <Link\n              onClick={() => {\n                setRoute(\"/\");\n              }}\n              to=\"/\"\n            >\n              Home\n            </Link>\n          </Menu.Item>\n\n          <Menu.Item key=\"/mainnetdai\">\n              <Link\n                onClick={() => {\n                  setRoute(\"/mainnetdai\");\n                }}\n                to=\"/mainnetdai\"\n              >\n                Mumbai DAI\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/mainnetwmatic\">\n              <Link\n                onClick={() => {\n                  setRoute(\"/mainnetwmatic\");\n                }}\n                to=\"/mainnetwmatic\"\n              >\n                Mumbai WMATIC\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/mainnetusdc\">\n              <Link\n                onClick={() => {\n                  setRoute(\"/mainnetusdc\");\n                }}\n                to=\"/mainnetusdc\"\n              >\n                Mumbai USDC\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/mainnetlsp\">\n              <Link\n                onClick={() => {\n                  setRoute(\"/mainnetlsp\");\n                }}\n                to=\"/mainnetlsp\"\n              >\n                Mumbai LSP\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/lspLongToken\">\n              <Link\n                onClick={() => {\n                  setRoute(\"/lspLongToken\");\n                }}\n                to=\"/lspLongToken\"\n              >\n                LSP Long Token\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/lspShortToken\">\n              <Link\n                onClick={() => {\n                  setRoute(\"/lspShortToken\");\n                }}\n                to=\"/lspShortToken\"\n              >\n                LSP Short Token\n              </Link>\n            </Menu.Item>\n            <Menu.Item key=\"/BOREDPUNKS\">\n              <Link\n                onClick={() => {\n                  setRoute(\"/BOREDPUNKS\");\n                }}\n                to=\"/BOREDPUNKS\"\n              >\n                BOREDPUNKS\n              </Link>\n            </Menu.Item>\n          </Menu>\n        */}\n\n        <Switch>\n          <Route path=\"/hints\">\n            <Hints\n              address={address}\n              yourLocalBalance={yourLocalBalance}\n              mainnetProvider={mainnetProvider}\n              price={price}\n            />\n          </Route>\n          <Route path=\"/exampleui\">\n            <ExampleUI\n              address={address}\n              userSigner={userSigner}\n              mainnetProvider={mainnetProvider}\n              localProvider={localProvider}\n              yourLocalBalance={yourLocalBalance}\n              price={price}\n              tx={tx}\n              writeContracts={writeContracts}\n              readContracts={readContracts}\n              purpose={purpose}\n              setPurposeEvents={setPurposeEvents}\n            />\n          </Route>\n          <Route path=\"/mainnetdai\">\n            <Contract\n              name=\"DAI\"\n              customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.DAI}\n              signer={userSigner}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer={targetNetwork.blockExplorer}\n              contractConfig={contractConfig}\n              chainId={targetNetwork.chainId}\n            />\n            {/*\n\n            */}\n          </Route>\n          <Route path=\"/mainnetwmatic\">\n            <Contract\n              name=\"WMATIC\"\n              customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.WMATIC}\n              signer={userSigner}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer={targetNetwork.blockExplorer}\n              contractConfig={contractConfig}\n              chainId={targetNetwork.chainId}\n            />\n          </Route>\n          <Route path=\"/mainnetusdc\">\n            <Contract\n              name=\"USDC\"\n              customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.USDC}\n              signer={userSigner}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer={targetNetwork.blockExplorer}\n              contractConfig={contractConfig}\n              chainId={targetNetwork.chainId}\n            />\n          </Route>\n          <Route path=\"/mainnetlsp\">\n            <Contract\n              name=\"LSP\"\n              customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.LSP}\n              signer={userSigner}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer={targetNetwork.blockExplorer}\n              contractConfig={contractConfig}\n              chainId={targetNetwork.chainId}\n            />\n          </Route>\n          <Route path=\"/lspLongToken\">\n            <Contract\n              name=\"LONG\"\n              customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.LONG}\n              signer={userSigner}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer={targetNetwork.blockExplorer}\n              contractConfig={contractConfig}\n              chainId={targetNetwork.chainId}\n            />\n          </Route>\n          <Route path=\"/lspShortToken\">\n            <Contract\n              name=\"SHORT\"\n              customContract={mainnetContracts && mainnetContracts.contracts && mainnetContracts.contracts.SHORT}\n              signer={userSigner}\n              provider={mainnetProvider}\n              address={address}\n              blockExplorer={targetNetwork.blockExplorer}\n              contractConfig={contractConfig}\n              chainId={targetNetwork.chainId}\n            />\n          </Route>\n          <Route path=\"/\">\n            <BoredPunks\n              address={address}\n              price={price}\n              usdcBalance={myMainnetUSDCBalance}\n              longBalance={longBalance}\n              shortBalance={shortBalance}\n              pairsMinted={pairsMinted}\n              colAllowance={colAllowance}\n              tx={tx}\n              mainnetProvider={mainnetProvider}\n              readContracts={readContracts}\n              writeContracts={writeContracts}\n            />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n\n      {/*<ThemeSwitch />*/}\n\n      {/* 👨‍💼 Your account is in the top right with a wallet at connect options */}\n      <div style={{ position: \"fixed\", textAlign: \"right\", right: 0, top: 0, padding: 10 }}>\n        <Account\n          address={address}\n          localProvider={localProvider}\n          userSigner={userSigner}\n          mainnetProvider={mainnetProvider}\n          price={price}\n          web3Modal={web3Modal}\n          loadWeb3Modal={loadWeb3Modal}\n          logoutOfWeb3Modal={logoutOfWeb3Modal}\n          blockExplorer={blockExplorer}\n        />\n        {faucetHint}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\nimport React from \"react\";\nimport { ThemeSwitcherProvider } from \"react-css-theme-switcher\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nconst themes = {\n  dark: `${process.env.PUBLIC_URL}/dark-theme.css`,\n  light: `${process.env.PUBLIC_URL}/light-theme.css`,\n};\n\nconst prevTheme = window.localStorage.getItem(\"theme\");\n\nconst subgraphUri = \"http://localhost:8000/subgraphs/name/scaffold-eth/your-contract\";\n\nconst client = new ApolloClient({\n  uri: subgraphUri,\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <ThemeSwitcherProvider themeMap={themes} defaultTheme={prevTheme || \"light\"}>\n      <App subgraphUri={subgraphUri} />\n    </ThemeSwitcherProvider>\n  </ApolloProvider>,\n  document.getElementById(\"root\"),\n);\n","const SyntheticTokenABI = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"tokenName\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"tokenSymbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint8\",\n        \"name\": \"tokenDecimals\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"roleId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newMember\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"manager\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"AddedSharedMember\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"roleId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"oldMember\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"manager\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"RemovedSharedMember\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"uint256\",\n        \"name\": \"roleId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"newMember\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"manager\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"ResetExclusiveMember\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"addBurner\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"roleId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"newMember\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"addMember\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"addMinter\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"burn\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"burnFrom\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint8\",\n        \"name\": \"\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"subtractedValue\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"decreaseAllowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"roleId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"getMember\",\n    \"outputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"roleId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"memberToCheck\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"holdsRole\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"addedValue\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"increaseAllowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isBurner\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"isMinter\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"removeBurner\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"roleId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"memberToRemove\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"removeMember\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"removeMinter\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"roleId\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"renounceMembership\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"roleId\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"newMember\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"resetMember\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"resetOwner\",\n    \"outputs\": [],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nconst ERC20ABI = [\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_from\",\n        type: \"address\",\n      },\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        name: \"balance\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        name: \"_to\",\n        type: \"address\",\n      },\n      {\n        name: \"_value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        name: \"_owner\",\n        type: \"address\",\n      },\n      {\n        name: \"_spender\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    payable: true,\n    stateMutability: \"payable\",\n    type: \"fallback\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"owner\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        name: \"from\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        name: \"to\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        name: \"value\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n];\nconst DAIABI = [\n  {\n    inputs: [\n      {\n        internalType: \"uint256\",\n        name: \"chainId_\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"constructor\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"guy\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Approval\",\n    type: \"event\",\n  },\n  {\n    anonymous: true,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"bytes4\",\n        name: \"sig\",\n        type: \"bytes4\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"arg1\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: true,\n        internalType: \"bytes32\",\n        name: \"arg2\",\n        type: \"bytes32\",\n      },\n      {\n        indexed: false,\n        internalType: \"bytes\",\n        name: \"data\",\n        type: \"bytes\",\n      },\n    ],\n    name: \"LogNote\",\n    type: \"event\",\n  },\n  {\n    anonymous: false,\n    inputs: [\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        indexed: true,\n        internalType: \"address\",\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        indexed: false,\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"Transfer\",\n    type: \"event\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"DOMAIN_SEPARATOR\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"PERMIT_TYPEHASH\",\n    outputs: [\n      {\n        internalType: \"bytes32\",\n        name: \"\",\n        type: \"bytes32\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"allowance\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"approve\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"balanceOf\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"burn\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"decimals\",\n    outputs: [\n      {\n        internalType: \"uint8\",\n        name: \"\",\n        type: \"uint8\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"guy\",\n        type: \"address\",\n      },\n    ],\n    name: \"deny\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"mint\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"move\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"name\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"nonces\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"holder\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"spender\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"nonce\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"expiry\",\n        type: \"uint256\",\n      },\n      {\n        internalType: \"bool\",\n        name: \"allowed\",\n        type: \"bool\",\n      },\n      {\n        internalType: \"uint8\",\n        name: \"v\",\n        type: \"uint8\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"r\",\n        type: \"bytes32\",\n      },\n      {\n        internalType: \"bytes32\",\n        name: \"s\",\n        type: \"bytes32\",\n      },\n    ],\n    name: \"permit\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"pull\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"usr\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"push\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"guy\",\n        type: \"address\",\n      },\n    ],\n    name: \"rely\",\n    outputs: [],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"symbol\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"totalSupply\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transfer\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: false,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"src\",\n        type: \"address\",\n      },\n      {\n        internalType: \"address\",\n        name: \"dst\",\n        type: \"address\",\n      },\n      {\n        internalType: \"uint256\",\n        name: \"wad\",\n        type: \"uint256\",\n      },\n    ],\n    name: \"transferFrom\",\n    outputs: [\n      {\n        internalType: \"bool\",\n        name: \"\",\n        type: \"bool\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"nonpayable\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [],\n    name: \"version\",\n    outputs: [\n      {\n        internalType: \"string\",\n        name: \"\",\n        type: \"string\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n  {\n    constant: true,\n    inputs: [\n      {\n        internalType: \"address\",\n        name: \"\",\n        type: \"address\",\n      },\n    ],\n    name: \"wards\",\n    outputs: [\n      {\n        internalType: \"uint256\",\n        name: \"\",\n        type: \"uint256\",\n      },\n    ],\n    payable: false,\n    stateMutability: \"view\",\n    type: \"function\",\n  },\n];\n\nconst LSPABI = [\n    {\n      \"inputs\": [\n        {\n          \"components\": [\n            {\n              \"internalType\": \"string\",\n              \"name\": \"pairName\",\n              \"type\": \"string\"\n            },\n            {\n              \"internalType\": \"uint64\",\n              \"name\": \"expirationTimestamp\",\n              \"type\": \"uint64\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"collateralPerPair\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"bytes32\",\n              \"name\": \"priceIdentifier\",\n              \"type\": \"bytes32\"\n            },\n            {\n              \"internalType\": \"contract ExpandedIERC20\",\n              \"name\": \"longToken\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"contract ExpandedIERC20\",\n              \"name\": \"shortToken\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"contract IERC20\",\n              \"name\": \"collateralToken\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"contract LongShortPairFinancialProductLibrary\",\n              \"name\": \"financialProductLibrary\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"bytes\",\n              \"name\": \"customAncillaryData\",\n              \"type\": \"bytes\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"prepaidProposerReward\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"optimisticOracleLivenessTime\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"optimisticOracleProposerBond\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"contract FinderInterface\",\n              \"name\": \"finder\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"timerAddress\",\n              \"type\": \"address\"\n            }\n          ],\n          \"internalType\": \"struct LongShortPair.ConstructorParams\",\n          \"name\": \"params\",\n          \"type\": \"tuple\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"caller\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"ContractExpired\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"sponsor\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"collateralReturned\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"longTokens\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": false,\n          \"internalType\": \"uint256\",\n          \"name\": \"shortTokens\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"PositionSettled\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"sponsor\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"collateralUsed\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokensMinted\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TokensCreated\",\n      \"type\": \"event\"\n    },\n    {\n      \"anonymous\": false,\n      \"inputs\": [\n        {\n          \"indexed\": true,\n          \"internalType\": \"address\",\n          \"name\": \"sponsor\",\n          \"type\": \"address\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"collateralReturned\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"indexed\": true,\n          \"internalType\": \"uint256\",\n          \"name\": \"tokensRedeemed\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"TokensRedeemed\",\n      \"type\": \"event\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"collateralPerPair\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"collateralToken\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract IERC20\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"contractState\",\n      \"outputs\": [\n        {\n          \"internalType\": \"enum LongShortPair.ContractState\",\n          \"name\": \"\",\n          \"type\": \"uint8\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"customAncillaryData\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes\",\n          \"name\": \"\",\n          \"type\": \"bytes\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"expirationTimestamp\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint64\",\n          \"name\": \"\",\n          \"type\": \"uint64\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"expiryPercentLong\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"expiryPrice\",\n      \"outputs\": [\n        {\n          \"internalType\": \"int256\",\n          \"name\": \"\",\n          \"type\": \"int256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"financialProductLibrary\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract LongShortPairFinancialProductLibrary\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"finder\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract FinderInterface\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"getCurrentTime\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"longToken\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract ExpandedIERC20\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"optimisticOracleLivenessTime\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"optimisticOracleProposerBond\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"pairName\",\n      \"outputs\": [\n        {\n          \"internalType\": \"string\",\n          \"name\": \"\",\n          \"type\": \"string\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"prepaidProposerReward\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"priceIdentifier\",\n      \"outputs\": [\n        {\n          \"internalType\": \"bytes32\",\n          \"name\": \"\",\n          \"type\": \"bytes32\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"time\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"setCurrentTime\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"shortToken\",\n      \"outputs\": [\n        {\n          \"internalType\": \"contract ExpandedIERC20\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"timerAddress\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokensToCreate\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"create\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"collateralUsed\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"tokensToRedeem\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"redeem\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"collateralReturned\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"longTokensToRedeem\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"shortTokensToRedeem\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"settle\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"collateralReturned\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [],\n      \"name\": \"expire\",\n      \"outputs\": [],\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"inputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"sponsor\",\n          \"type\": \"address\"\n        }\n      ],\n      \"name\": \"getPositionTokens\",\n      \"outputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        },\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ];\n\n  const DAIABIMUMBAI = [\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"name\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"string\",\n        \"name\": \"symbol\",\n        \"type\": \"string\"\n      },\n      {\n        \"internalType\": \"uint8\",\n        \"name\": \"decimals\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"internalType\": \"address\",\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"type\": \"event\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint8\",\n        \"name\": \"\",\n        \"type\": \"uint8\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"subtractedValue\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"decreaseAllowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"addedValue\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"increaseAllowance\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"value\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"internalType\": \"string\",\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"internalType\": \"address\",\n        \"name\": \"sender\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"address\",\n        \"name\": \"recipient\",\n        \"type\": \"address\"\n      },\n      {\n        \"internalType\": \"uint256\",\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"internalType\": \"bool\",\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n]\n\n\n\n// Mainnet DAI, Optimism and Arbitrium Rollup Contracts with local addresses\nmodule.exports = {\n\n  80001: {\n    contracts: {\n      DAI: {\n        address: \"0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F\",\n        abi: DAIABIMUMBAI,\n      },\n      WMATIC: {\n        address: \"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889\",\n        abi: ERC20ABI,\n      },\n      USDC: {\n        address: \"0x2058A9D7613eEE744279e3856Ef0eAda5FCbaA7e\",\n        abi: ERC20ABI,\n      },\n      LSP: {\n        address: \"0xfb75cceBe6aea69F041d401bb66F02d187cB0ECF\",\n        abi: LSPABI,\n      },\n      SHORT: {\n        address: \"0x9189a9BEFa7E0799d2470b49948588C14B7A1036\",\n        abi: SyntheticTokenABI,\n      },\n      LONG: {\n        address: \"0xf497360850367A9F17738392f48080f951959e8C\",\n        abi: SyntheticTokenABI,\n      },\n    },\n  },\n  137 : {\n    contracts: {\n      WMATIC: {\n        address: \"0x0d500b1d8e8ef31e21c99d1db9a6444d3adf1270\",\n        abi: ERC20ABI,\n      },\n      LSP: {\n        address: \"0x8e13333ad57901b41D37D6a7207dCd7Fb52B6B09\",\n        abi: LSPABI,\n      },\n      SHORT: {\n        address: \"0x51ACc5E8C3b7bb34c3Be8150ce29bfbC1FcdA17C\",\n        abi: SyntheticTokenABI,\n      },\n      LONG: {\n        address: \"0x95d83F738500B0Dd9C6C668EddA3d9E5ff481599\",\n        abi: SyntheticTokenABI,\n      },\n      USDC: {\n        address: \"0x2791bca1f2de4661ed88a30c99a7a9449aa84174\",\n        abi: ERC20ABI\n      }\n    },\n  },\n\n};\n"],"sourceRoot":""}